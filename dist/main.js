/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_game_view__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/game_view */ \"./src/scripts/game_view.js\");\n\nconst preloadedImages = [];\nconst imageUrls = [\"src/assets/images/boss1.png\", \"src/assets/images/enemy_projectile.png\", \"src/assets/images/enemy1.png\", \"src/assets/images/enemy2.png\", \"src/assets/images/enemy3.png\", \"src/assets/images/player_projectile.png\", \"src/assets/images/player1.png\", \"src/assets/images/game_background.png\", \"src/assets/images/explosion1.png\", \"src/assets/images/explosion2.png\"];\nimageUrls.forEach((url, i) => {\n  preloadedImages[i] = new Image();\n  preloadedImages[i].src = url;\n});\nwindow.addEventListener(\"load\", () => {\n  window.canvas = document.getElementById(\"game-view\");\n  window.ctx = canvas.getContext(\"2d\");\n  const view = new _scripts_game_view__WEBPACK_IMPORTED_MODULE_0__[\"default\"](canvas, ctx);\n  view.start();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7QUFBMkM7QUFFM0MsTUFBTUMsZUFBZSxHQUFHLEVBQUU7QUFDMUIsTUFBTUMsU0FBUyxHQUFHLENBQ2hCLDZCQUE2QixFQUM3Qix3Q0FBd0MsRUFDeEMsOEJBQThCLEVBQzlCLDhCQUE4QixFQUM5Qiw4QkFBOEIsRUFDOUIseUNBQXlDLEVBQ3pDLCtCQUErQixFQUMvQix1Q0FBdUMsRUFDdkMsa0NBQWtDLEVBQ2xDLGtDQUFrQyxDQUNuQztBQUVEQSxTQUFTLENBQUNDLE9BQU8sQ0FBQyxDQUFDQyxHQUFHLEVBQUVDLENBQUMsS0FBSztFQUM1QkosZUFBZSxDQUFDSSxDQUFDLENBQUMsR0FBRyxJQUFJQyxLQUFLLENBQUMsQ0FBQztFQUNoQ0wsZUFBZSxDQUFDSSxDQUFDLENBQUMsQ0FBQ0UsR0FBRyxHQUFHSCxHQUFHO0FBQzlCLENBQUMsQ0FBQztBQUVGSSxNQUFNLENBQUNDLGdCQUFnQixDQUFDLE1BQU0sRUFBRSxNQUFNO0VBQ3BDRCxNQUFNLENBQUNFLE1BQU0sR0FBR0MsUUFBUSxDQUFDQyxjQUFjLENBQUMsV0FBVyxDQUFDO0VBQ3BESixNQUFNLENBQUNLLEdBQUcsR0FBR0gsTUFBTSxDQUFDSSxVQUFVLENBQUMsSUFBSSxDQUFDO0VBQ3BDLE1BQU1DLElBQUksR0FBRyxJQUFJZiwwREFBUSxDQUFDVSxNQUFNLEVBQUVHLEdBQUcsQ0FBQztFQUN0Q0UsSUFBSSxDQUFDQyxLQUFLLENBQUMsQ0FBQztBQUNkLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2phdmFzY3JpcHQtcHJvamVjdC8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBHYW1lVmlldyBmcm9tIFwiLi9zY3JpcHRzL2dhbWVfdmlld1wiO1xuXG5jb25zdCBwcmVsb2FkZWRJbWFnZXMgPSBbXTtcbmNvbnN0IGltYWdlVXJscyA9IFtcbiAgXCJzcmMvYXNzZXRzL2ltYWdlcy9ib3NzMS5wbmdcIixcbiAgXCJzcmMvYXNzZXRzL2ltYWdlcy9lbmVteV9wcm9qZWN0aWxlLnBuZ1wiLFxuICBcInNyYy9hc3NldHMvaW1hZ2VzL2VuZW15MS5wbmdcIixcbiAgXCJzcmMvYXNzZXRzL2ltYWdlcy9lbmVteTIucG5nXCIsXG4gIFwic3JjL2Fzc2V0cy9pbWFnZXMvZW5lbXkzLnBuZ1wiLFxuICBcInNyYy9hc3NldHMvaW1hZ2VzL3BsYXllcl9wcm9qZWN0aWxlLnBuZ1wiLFxuICBcInNyYy9hc3NldHMvaW1hZ2VzL3BsYXllcjEucG5nXCIsXG4gIFwic3JjL2Fzc2V0cy9pbWFnZXMvZ2FtZV9iYWNrZ3JvdW5kLnBuZ1wiLFxuICBcInNyYy9hc3NldHMvaW1hZ2VzL2V4cGxvc2lvbjEucG5nXCIsXG4gIFwic3JjL2Fzc2V0cy9pbWFnZXMvZXhwbG9zaW9uMi5wbmdcIlxuXVxuXG5pbWFnZVVybHMuZm9yRWFjaCgodXJsLCBpKSA9PiB7XG4gIHByZWxvYWRlZEltYWdlc1tpXSA9IG5ldyBJbWFnZSgpO1xuICBwcmVsb2FkZWRJbWFnZXNbaV0uc3JjID0gdXJsO1xufSlcblxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsICgpID0+IHtcbiAgd2luZG93LmNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZ2FtZS12aWV3XCIpO1xuICB3aW5kb3cuY3R4ID0gY2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcbiAgY29uc3QgdmlldyA9IG5ldyBHYW1lVmlldyhjYW52YXMsIGN0eCk7XG4gIHZpZXcuc3RhcnQoKVxufSk7XG4iXSwibmFtZXMiOlsiR2FtZVZpZXciLCJwcmVsb2FkZWRJbWFnZXMiLCJpbWFnZVVybHMiLCJmb3JFYWNoIiwidXJsIiwiaSIsIkltYWdlIiwic3JjIiwid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsImNhbnZhcyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJjdHgiLCJnZXRDb250ZXh0IiwidmlldyIsInN0YXJ0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/boss.js":
/*!*****************************!*\
  !*** ./src/scripts/boss.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ship__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ship */ \"./src/scripts/ship.js\");\n/* harmony import */ var _explosion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./explosion */ \"./src/scripts/explosion.js\");\n/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./timer */ \"./src/scripts/timer.js\");\n// The big bad boss, the final enemy in a level\n// Defeat the boss to win and save the galaxy!\n\n\n\n\nclass Boss extends _ship__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  static MAX_HEALTH = 50;\n  constructor(game) {\n    // Ship/Moving Object related arguments\n    let image = document.createElement(\"img\");\n    image.src = \"src/assets/images/boss1.png\";\n    let height = 220;\n    let width = 250;\n    let health = Boss.MAX_HEALTH;\n    let projectileDmg = 2;\n    const objArgs = {\n      width: width,\n      height: height,\n      position: [game.canvasWidth / 2 - width / 2, 0 - height * 2],\n      velocity: [0, 1],\n      speed: 1,\n      health: health,\n      game: game,\n      image: image,\n      type: \"enemies\"\n    };\n\n    // Projectile related arguments\n    image = document.createElement(\"img\");\n    image.src = \"src/assets/images/enemy_projectile.png\";\n    const projectileArgs = [{\n      objArgs: {\n        velocity: [0, 8],\n        speed: 8,\n        health: projectileDmg,\n        game: game,\n        width: 10,\n        height: 40,\n        image: image\n      },\n      type: \"bullet\",\n      origin: \"enemy\",\n      projectileSound: \"bossProjectile\"\n    }];\n\n    // boss projectile patterns, to be activated based on boss phase\n    const patternArgs = [{\n      positionDeltas: [[18, 200], [width - 32, 200]],\n      batchFireNum: 1,\n      batchFireInterval: 0,\n      cooldown: 1000,\n      onCooldown: true,\n      timer: null,\n      projectileArgIndex: 0\n    }, {\n      positionDeltas: [[60, 210], [width - 76, 210]],\n      batchFireNum: 2,\n      batchFireInterval: 150,\n      cooldown: 2000,\n      onCooldown: true,\n      timer: null,\n      projectileArgIndex: 0\n    }, {\n      positionDeltas: [[75, 180], [width - 88, 180]],\n      batchFireNum: 2,\n      batchFireInterval: 150,\n      cooldown: 1000,\n      onCooldown: true,\n      timer: null,\n      projectileArgIndex: 0\n    }, {\n      positionDeltas: [[100, 160], [width - 110, 160]],\n      batchFireNum: 3,\n      batchFireInterval: 150,\n      cooldown: 2000,\n      onCooldown: true,\n      timer: null,\n      projectileArgIndex: 0\n    }];\n    super(objArgs, projectileArgs, patternArgs);\n  }\n\n  // box1 is the weakspot\n  getHitbox() {\n    const box1 = {\n      x: this.position[0] + 85,\n      y: this.position[1] + 90,\n      width: 80,\n      height: 70\n    };\n    const box2 = {\n      x: this.position[0] + 10,\n      y: this.position[1] + 90,\n      width: (this.width - 100) / 2,\n      height: this.height - 110\n    };\n    const box3 = {\n      x: this.position[0] + 165,\n      y: this.position[1] + 90,\n      width: (this.width - 100) / 2,\n      height: this.height - 110\n    };\n    const box4 = {\n      x: this.position[0] + 45,\n      y: this.position[1] + 30,\n      width: 155,\n      height: 60\n    };\n    return [box1, box2, box3, box4];\n  }\n\n  // only takes damage if weakpoint hit (index 0 is the hitbox1 weakpoint)\n  // takes in the colliding MovingObject and an array of hitbox collision positions as [[int, int]]\n  handleCollided(otherObj, hitboxesCollided) {\n    const otherObjClass = otherObj.constructor.name;\n    if (otherObjClass === \"Projectile\") {\n      if (hitboxesCollided.includes(0)) {\n        const damage = otherObj.health;\n        this.damageTaken(damage);\n      }\n      otherObj.remove();\n    }\n  }\n\n  // Boss will slowly move down center from the top during cutscene\n  // then move side to side throughout the fight at normal speed \n  updateVelocity() {\n    if (this.movementDisabled) return;\n    if (this.position[1] > 0) {\n      this.speed = 1.5;\n      if (this.velocity[0] === 0 || this.position[0] < 0) {\n        if (this.velocity[0] === 0) {\n          new _timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, this.resetCooldown.bind(this, 0), 1250);\n          this.game.sounds.switchBGM(\"bossBGM\");\n          this.game.player.disabled = false;\n        }\n        this.velocity = [this.speed, 0];\n      } else if (this.position[0] > this.game.canvasWidth - this.width) {\n        this.velocity = [-this.speed, 0];\n      }\n    }\n  }\n\n  // Boss shooting patterns updated based on health remaining\n  updateShootingPattern() {\n    if (this.health === 20) {\n      this.patternArgs[0].timer?.clear();\n      this.patternArgs[1].timer?.clear();\n      this.patternArgs[2].timer?.clear();\n      this.patternArgs[0].onCooldown = false;\n      this.patternArgs[1].onCooldown = false;\n      this.patternArgs[2].onCooldown = false;\n      this.patternArgs[3].onCooldown = false;\n    } else if (this.health === 30) {\n      this.patternArgs[0].timer?.clear();\n      this.patternArgs[1].timer?.clear();\n      this.patternArgs[0].onCooldown = false;\n      this.patternArgs[1].onCooldown = false;\n      this.patternArgs[2].onCooldown = false;\n    } else if (this.health === 40) {\n      this.patternArgs[0].timer?.clear();\n      this.patternArgs[0].onCooldown = false;\n      this.patternArgs[1].onCooldown = false;\n    }\n  }\n  shootProjectile() {\n    if (!this.disabled) super.shootProjectile();\n  }\n  damageTaken(damage) {\n    if (!this.disabled) {\n      super.damageTaken(damage);\n      this.updateShootingPattern();\n    }\n  }\n\n  // Boss death animations plays alot of minor explosions and ends with big finale explosion\n  // Then proceeds to game win after a delay\n  remove() {\n    this.game.score += 1000;\n    this.disabled = true;\n\n    // minor explosions\n    for (let i = 0; i < 20; i++) {\n      const timeDelay = i * 200;\n      if (i % 2 === 0) new _timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, () => this.game.sounds.add(\"explosion\"), timeDelay);\n      new _timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, () => {\n        const hitBoxes = this.getHitbox();\n        const randHitBox = hitBoxes[i % hitBoxes.length];\n        const randPosX = Math.floor(Math.random() * (randHitBox.x + randHitBox.width - randHitBox.x) + randHitBox.x);\n        const randPosY = Math.floor(Math.random() * (randHitBox.y + randHitBox.height - randHitBox.y) + randHitBox.y);\n        const dx = this.velocity[0] < 0 ? 30 : 10;\n        new _explosion__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.game, 80, [randPosX - dx, randPosY - 70], \"minor\", [0, 0.1]);\n      }, timeDelay);\n    }\n\n    // stop for final explosion\n    new _timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, () => {\n      this.velocity = [0, 0];\n      this.speed = 0;\n      this.movementDisabled = true;\n    }, 4000);\n\n    // final explosion and start timer for setting game win\n    new _timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, () => {\n      this.game.sounds.playMajorSound(\"bossDeath\");\n      const multiplier = this.velocity[0] < 0 ? 1 : -1;\n      const posX = this.position[0] - this.width / 2;\n      const posY = this.position[1] - this.height / 1.5;\n      new _explosion__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.game, 500, [posX - 30, posY], \"major\", [0, 0]);\n      super.remove();\n      new _timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, this.game.setWin.bind(this.game), 3500);\n    }, 4500);\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Boss);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/boss.js\n");

/***/ }),

/***/ "./src/scripts/enemy_ship.js":
/*!***********************************!*\
  !*** ./src/scripts/enemy_ship.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ship__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ship */ \"./src/scripts/ship.js\");\n/* harmony import */ var _explosion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./explosion */ \"./src/scripts/explosion.js\");\n// Low level enemies that move top to bottom\n// shooting 1 bullet downwards at consistent intervals\n\n\n\nclass EnemyShip extends _ship__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  // posX is the initial x position\n  // cooldown is in milliseconds\n  constructor(game, posX, speed, cooldown) {\n    // Ship/MovingObject related arguments\n    let image = document.createElement(\"img\");\n    image.src = \"src/assets/images/enemy1.png\";\n    let height = 40;\n    let width = 46;\n    let health = 1;\n    let projectileDmg = 1;\n\n    // in case the random position clips the ship image out of bounds\n    if (posX < 0 - width) {\n      posX = 0;\n    } else if (posX > game.canvasWidth - width) {\n      posX = game.canvasWidth - width;\n    }\n    const objArgs = {\n      width: width,\n      height: height,\n      position: [posX, 0 - height * 2],\n      velocity: [0, speed],\n      speed: speed,\n      health: health,\n      game: game,\n      image: image,\n      type: \"enemies\"\n    };\n\n    // Projectile related arguments\n    image = document.createElement(\"img\");\n    image.src = \"src/assets/images/enemy_projectile.png\";\n    const projectileArgs = [{\n      objArgs: {\n        velocity: [0, 8],\n        speed: 8,\n        health: projectileDmg,\n        game: game,\n        width: 5,\n        height: 20,\n        image: image\n      },\n      type: \"bullet\",\n      origin: \"enemy\",\n      projectileSound: \"enemyProjectile\"\n    }];\n\n    // projectile pattern\n    const patternArgs = [{\n      positionDeltas: [[width / 2.25, 10]],\n      batchFireNum: 1,\n      batchFireInterval: 0,\n      cooldown: cooldown,\n      onCooldown: false,\n      timer: null,\n      projectileArgIndex: 0\n    }];\n    super(objArgs, projectileArgs, patternArgs);\n  }\n\n  // enemy ships simply move from top to bottom\n  // removed once they get below the screen\n  handleBounds(newPosition) {\n    if (!this.inUpperYHeightBounds(newPosition[1])) {\n      this.remove();\n    } else {\n      this.position = newPosition;\n    }\n  }\n  remove() {\n    if (this.health <= 0) {\n      this.game.sounds.add(\"explosion\");\n      new _explosion__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.game, 80, this.position, \"minor\", [0, 0.25]);\n      this.game.score += 50;\n    }\n    super.remove();\n    this.game.enemiesRemaining -= 1;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (EnemyShip);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFDLEVBQUU7TUFDcEIsSUFBSSxDQUFDVixJQUFJLENBQUMrQixNQUFNLENBQUNDLEdBQUcsQ0FBQyxXQUFXLENBQUM7TUFDakMsSUFBSW5DLGtEQUFTLENBQUMsSUFBSSxDQUFDRyxJQUFJLEVBQUUsRUFBRSxFQUFFLElBQUksQ0FBQ2MsUUFBUSxFQUFFLE9BQU8sRUFBRSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztNQUMvRCxJQUFJLENBQUNkLElBQUksQ0FBQ2lDLEtBQUssSUFBSSxFQUFFO0lBQ3ZCO0lBRUEsS0FBSyxDQUFDSCxNQUFNLENBQUMsQ0FBQztJQUNkLElBQUksQ0FBQzlCLElBQUksQ0FBQ2tDLGdCQUFnQixJQUFJLENBQUM7RUFDakM7QUFDRjtBQUVBLCtEQUFlcEMsU0FBUyIsInNvdXJjZXMiOlsid2VicGFjazovL2phdmFzY3JpcHQtcHJvamVjdC8uL3NyYy9zY3JpcHRzL2VuZW15X3NoaXAuanM/YjVmMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBMb3cgbGV2ZWwgZW5lbWllcyB0aGF0IG1vdmUgdG9wIHRvIGJvdHRvbVxuLy8gc2hvb3RpbmcgMSBidWxsZXQgZG93bndhcmRzIGF0IGNvbnNpc3RlbnQgaW50ZXJ2YWxzXG5cbmltcG9ydCBTaGlwIGZyb20gXCIuL3NoaXBcIjtcbmltcG9ydCBFeHBsb3Npb24gZnJvbSBcIi4vZXhwbG9zaW9uXCI7XG5cbmNsYXNzIEVuZW15U2hpcCBleHRlbmRzIFNoaXAge1xuICAvLyBwb3NYIGlzIHRoZSBpbml0aWFsIHggcG9zaXRpb25cbiAgLy8gY29vbGRvd24gaXMgaW4gbWlsbGlzZWNvbmRzXG4gIGNvbnN0cnVjdG9yKGdhbWUsIHBvc1gsIHNwZWVkLCBjb29sZG93bikge1xuICAgIC8vIFNoaXAvTW92aW5nT2JqZWN0IHJlbGF0ZWQgYXJndW1lbnRzXG4gICAgbGV0IGltYWdlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKTtcbiAgICBpbWFnZS5zcmMgPSBcInNyYy9hc3NldHMvaW1hZ2VzL2VuZW15MS5wbmdcIjtcbiAgICBsZXQgaGVpZ2h0ID0gNDA7XG4gICAgbGV0IHdpZHRoID0gNDY7XG4gICAgbGV0IGhlYWx0aCA9IDE7XG4gICAgbGV0IHByb2plY3RpbGVEbWcgPSAxO1xuXG4gICAgLy8gaW4gY2FzZSB0aGUgcmFuZG9tIHBvc2l0aW9uIGNsaXBzIHRoZSBzaGlwIGltYWdlIG91dCBvZiBib3VuZHNcbiAgICBpZiAocG9zWCA8IDAgLSB3aWR0aCkge1xuICAgICAgcG9zWCA9IDA7XG4gICAgfSBlbHNlIGlmIChwb3NYID4gZ2FtZS5jYW52YXNXaWR0aCAtIHdpZHRoKSB7XG4gICAgICBwb3NYID0gZ2FtZS5jYW52YXNXaWR0aCAtIHdpZHRoO1xuICAgIH1cblxuICAgIGNvbnN0IG9iakFyZ3MgPSB7XG4gICAgICB3aWR0aDogd2lkdGgsXG4gICAgICBoZWlnaHQ6IGhlaWdodCxcbiAgICAgIHBvc2l0aW9uOiBbcG9zWCwgMCAtIChoZWlnaHQgKiAyKV0sXG4gICAgICB2ZWxvY2l0eTogWzAsIHNwZWVkXSxcbiAgICAgIHNwZWVkOiBzcGVlZCxcbiAgICAgIGhlYWx0aDogaGVhbHRoLFxuICAgICAgZ2FtZTogZ2FtZSxcbiAgICAgIGltYWdlOiBpbWFnZSxcbiAgICAgIHR5cGU6IFwiZW5lbWllc1wiXG4gICAgfVxuXG4gICAgLy8gUHJvamVjdGlsZSByZWxhdGVkIGFyZ3VtZW50c1xuICAgIGltYWdlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKTtcbiAgICBpbWFnZS5zcmMgPSBcInNyYy9hc3NldHMvaW1hZ2VzL2VuZW15X3Byb2plY3RpbGUucG5nXCI7XG4gICAgY29uc3QgcHJvamVjdGlsZUFyZ3MgPSBbe1xuICAgICAgb2JqQXJnczoge1xuICAgICAgICB2ZWxvY2l0eTogWzAsIDhdLFxuICAgICAgICBzcGVlZDogOCxcbiAgICAgICAgaGVhbHRoOiBwcm9qZWN0aWxlRG1nLFxuICAgICAgICBnYW1lOiBnYW1lLFxuICAgICAgICB3aWR0aDogNSxcbiAgICAgICAgaGVpZ2h0OiAyMCxcbiAgICAgICAgaW1hZ2U6IGltYWdlXG4gICAgICB9LFxuICAgICAgdHlwZTogXCJidWxsZXRcIixcbiAgICAgIG9yaWdpbjogXCJlbmVteVwiLFxuICAgICAgcHJvamVjdGlsZVNvdW5kOiBcImVuZW15UHJvamVjdGlsZVwiXG4gICAgfV1cblxuICAgIC8vIHByb2plY3RpbGUgcGF0dGVyblxuICAgIGNvbnN0IHBhdHRlcm5BcmdzID0gW3tcbiAgICAgIHBvc2l0aW9uRGVsdGFzOiBbW3dpZHRoLygyLjI1KSwgMTBdXSxcbiAgICAgIGJhdGNoRmlyZU51bTogMSxcbiAgICAgIGJhdGNoRmlyZUludGVydmFsOiAwLFxuICAgICAgY29vbGRvd246IGNvb2xkb3duLFxuICAgICAgb25Db29sZG93bjogZmFsc2UsXG4gICAgICB0aW1lcjogbnVsbCxcbiAgICAgIHByb2plY3RpbGVBcmdJbmRleDogMFxuICAgIH1dXG5cbiAgICBzdXBlcihvYmpBcmdzLCBwcm9qZWN0aWxlQXJncywgcGF0dGVybkFyZ3MpO1xuICB9XG5cbiAgLy8gZW5lbXkgc2hpcHMgc2ltcGx5IG1vdmUgZnJvbSB0b3AgdG8gYm90dG9tXG4gIC8vIHJlbW92ZWQgb25jZSB0aGV5IGdldCBiZWxvdyB0aGUgc2NyZWVuXG4gIGhhbmRsZUJvdW5kcyhuZXdQb3NpdGlvbikge1xuICAgIGlmICghdGhpcy5pblVwcGVyWUhlaWdodEJvdW5kcyhuZXdQb3NpdGlvblsxXSkpIHtcbiAgICAgIHRoaXMucmVtb3ZlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucG9zaXRpb24gPSBuZXdQb3NpdGlvbjtcbiAgICB9XG4gIH1cblxuICByZW1vdmUoKSB7XG4gICAgaWYgKHRoaXMuaGVhbHRoIDw9IDApIHtcbiAgICAgIHRoaXMuZ2FtZS5zb3VuZHMuYWRkKFwiZXhwbG9zaW9uXCIpO1xuICAgICAgbmV3IEV4cGxvc2lvbih0aGlzLmdhbWUsIDgwLCB0aGlzLnBvc2l0aW9uLCBcIm1pbm9yXCIsIFswLCAwLjI1XSk7XG4gICAgICB0aGlzLmdhbWUuc2NvcmUgKz0gNTA7XG4gICAgfVxuXG4gICAgc3VwZXIucmVtb3ZlKCk7XG4gICAgdGhpcy5nYW1lLmVuZW1pZXNSZW1haW5pbmcgLT0gMTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBFbmVteVNoaXA7Il0sIm5hbWVzIjpbIlNoaXAiLCJFeHBsb3Npb24iLCJFbmVteVNoaXAiLCJjb25zdHJ1Y3RvciIsImdhbWUiLCJwb3NYIiwic3BlZWQiLCJjb29sZG93biIsImltYWdlIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic3JjIiwiaGVpZ2h0Iiwid2lkdGgiLCJoZWFsdGgiLCJwcm9qZWN0aWxlRG1nIiwiY2FudmFzV2lkdGgiLCJvYmpBcmdzIiwicG9zaXRpb24iLCJ2ZWxvY2l0eSIsInR5cGUiLCJwcm9qZWN0aWxlQXJncyIsIm9yaWdpbiIsInByb2plY3RpbGVTb3VuZCIsInBhdHRlcm5BcmdzIiwicG9zaXRpb25EZWx0YXMiLCJiYXRjaEZpcmVOdW0iLCJiYXRjaEZpcmVJbnRlcnZhbCIsIm9uQ29vbGRvd24iLCJ0aW1lciIsInByb2plY3RpbGVBcmdJbmRleCIsImhhbmRsZUJvdW5kcyIsIm5ld1Bvc2l0aW9uIiwiaW5VcHBlcllIZWlnaHRCb3VuZHMiLCJyZW1vdmUiLCJzb3VuZHMiLCJhZGQiLCJzY29yZSIsImVuZW1pZXNSZW1haW5pbmciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/enemy_ship.js\n");

/***/ }),

/***/ "./src/scripts/explosion.js":
/*!**********************************!*\
  !*** ./src/scripts/explosion.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _moving_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./moving_object */ \"./src/scripts/moving_object.js\");\n// Explosion class handles different explosion types for death animations\n\n\nclass Explosion extends _moving_object__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  // position and velocityDeltas are [int, int]\n  // explosionType is a string of either \"minor\" or \"major\"\n  constructor(game, size, position, explosionType, velocityDelta) {\n    const image = document.createElement(\"img\");\n\n    // minor for enemy ships, major for player/boss death\n    if (explosionType === \"minor\") {\n      image.src = \"src/assets/images/explosion1.png\";\n    } else if (explosionType === \"major\") {\n      image.src = \"src/assets/images/explosion2.png\";\n    }\n    const argsObj = {\n      position: position,\n      velocity: [0, 0],\n      speed: 0,\n      health: 0,\n      game: game,\n      width: size,\n      height: size,\n      image: image,\n      type: \"explosions\"\n    };\n    super(argsObj);\n    if (explosionType === \"minor\") {\n      this.maxFrames = 20;\n      this.imgSize = 192;\n      this.cutSize = 5;\n    } else if (explosionType === \"major\") {\n      this.maxFrames = 48;\n      this.imgSize = 240;\n      this.cutSize = 8;\n    }\n    this.frame = 0;\n    this.velocityDelta = velocityDelta;\n  }\n\n  // explosions are animated sprites with multiple frames\n  draw(ctx) {\n    const yOffset = Math.floor(this.frame / this.cutSize);\n    const xOffset = this.frame % this.cutSize;\n    ctx.drawImage(this.image, this.imgSize * xOffset, this.imgSize * yOffset, this.imgSize, this.imgSize, this.position[0], this.position[1], this.width, this.height);\n    this.frame += 1;\n    if (this.frame >= this.maxFrames) {\n      this.remove();\n    }\n  }\n  updateVelocity() {\n    this.velocity[0] += this.velocityDelta[0];\n    this.velocity[1] += this.velocityDelta[1];\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Explosion);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Y2s6Ly9qYXZhc2NyaXB0LXByb2plY3QvLi9zcmMvc2NyaXB0cy9leHBsb3Npb24uanM/ZTM1MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBFeHBsb3Npb24gY2xhc3MgaGFuZGxlcyBkaWZmZXJlbnQgZXhwbG9zaW9uIHR5cGVzIGZvciBkZWF0aCBhbmltYXRpb25zXG5cbmltcG9ydCBNb3ZpbmdPYmplY3QgZnJvbSBcIi4vbW92aW5nX29iamVjdFwiO1xuXG5jbGFzcyBFeHBsb3Npb24gZXh0ZW5kcyBNb3ZpbmdPYmplY3Qge1xuICAvLyBwb3NpdGlvbiBhbmQgdmVsb2NpdHlEZWx0YXMgYXJlIFtpbnQsIGludF1cbiAgLy8gZXhwbG9zaW9uVHlwZSBpcyBhIHN0cmluZyBvZiBlaXRoZXIgXCJtaW5vclwiIG9yIFwibWFqb3JcIlxuICBjb25zdHJ1Y3RvcihnYW1lLCBzaXplLCBwb3NpdGlvbiwgZXhwbG9zaW9uVHlwZSwgdmVsb2NpdHlEZWx0YSkge1xuICAgIGNvbnN0IGltYWdlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKTtcbiAgICBcbiAgICAvLyBtaW5vciBmb3IgZW5lbXkgc2hpcHMsIG1ham9yIGZvciBwbGF5ZXIvYm9zcyBkZWF0aFxuICAgIGlmIChleHBsb3Npb25UeXBlID09PSBcIm1pbm9yXCIpIHtcbiAgICAgIGltYWdlLnNyYyA9IFwic3JjL2Fzc2V0cy9pbWFnZXMvZXhwbG9zaW9uMS5wbmdcIjtcbiAgICB9IGVsc2UgaWYgKGV4cGxvc2lvblR5cGUgPT09IFwibWFqb3JcIiApIHtcbiAgICAgIGltYWdlLnNyYyA9IFwic3JjL2Fzc2V0cy9pbWFnZXMvZXhwbG9zaW9uMi5wbmdcIjtcbiAgICB9XG5cbiAgICBjb25zdCBhcmdzT2JqID0ge1xuICAgICAgcG9zaXRpb246IHBvc2l0aW9uLFxuICAgICAgdmVsb2NpdHk6IFswLCAwXSxcbiAgICAgIHNwZWVkOiAwLFxuICAgICAgaGVhbHRoOiAwLFxuICAgICAgZ2FtZTogZ2FtZSxcbiAgICAgIHdpZHRoOiBzaXplLFxuICAgICAgaGVpZ2h0OiBzaXplLFxuICAgICAgaW1hZ2U6IGltYWdlLFxuICAgICAgdHlwZTogXCJleHBsb3Npb25zXCJcbiAgICB9XG4gICAgc3VwZXIoYXJnc09iaik7XG5cbiAgICBpZiAoZXhwbG9zaW9uVHlwZSA9PT0gXCJtaW5vclwiKSB7XG4gICAgICB0aGlzLm1heEZyYW1lcyA9IDIwO1xuICAgICAgdGhpcy5pbWdTaXplID0gMTkyO1xuICAgICAgdGhpcy5jdXRTaXplID0gNTtcbiAgICB9IGVsc2UgaWYgKGV4cGxvc2lvblR5cGUgPT09IFwibWFqb3JcIiApIHtcbiAgICAgIHRoaXMubWF4RnJhbWVzID0gNDg7XG4gICAgICB0aGlzLmltZ1NpemUgPSAyNDA7XG4gICAgICB0aGlzLmN1dFNpemUgPSA4O1xuICAgIH1cblxuICAgIHRoaXMuZnJhbWUgPSAwO1xuICAgIHRoaXMudmVsb2NpdHlEZWx0YSA9IHZlbG9jaXR5RGVsdGE7XG4gIH1cblxuICAvLyBleHBsb3Npb25zIGFyZSBhbmltYXRlZCBzcHJpdGVzIHdpdGggbXVsdGlwbGUgZnJhbWVzXG4gIGRyYXcoY3R4KSB7XG4gICAgY29uc3QgeU9mZnNldCA9IE1hdGguZmxvb3IodGhpcy5mcmFtZS90aGlzLmN1dFNpemUpO1xuICAgIGNvbnN0IHhPZmZzZXQgPSB0aGlzLmZyYW1lICUgdGhpcy5jdXRTaXplO1xuICAgIGN0eC5kcmF3SW1hZ2UodGhpcy5pbWFnZSwgXG4gICAgICAgICAgICAgICAgICB0aGlzLmltZ1NpemUqeE9mZnNldCwgdGhpcy5pbWdTaXplKnlPZmZzZXQsIHRoaXMuaW1nU2l6ZSwgdGhpcy5pbWdTaXplLCBcbiAgICAgICAgICAgICAgICAgIHRoaXMucG9zaXRpb25bMF0sIHRoaXMucG9zaXRpb25bMV0sIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0KTtcbiAgICB0aGlzLmZyYW1lICs9IDE7XG5cbiAgICBpZiAodGhpcy5mcmFtZSA+PSB0aGlzLm1heEZyYW1lcykge1xuICAgICAgdGhpcy5yZW1vdmUoKTtcbiAgICB9XG4gIH1cblxuICB1cGRhdGVWZWxvY2l0eSgpIHtcbiAgICB0aGlzLnZlbG9jaXR5WzBdICs9IHRoaXMudmVsb2NpdHlEZWx0YVswXTtcbiAgICB0aGlzLnZlbG9jaXR5WzFdICs9IHRoaXMudmVsb2NpdHlEZWx0YVsxXTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBFeHBsb3Npb247Il0sIm5hbWVzIjpbIk1vdmluZ09iamVjdCIsIkV4cGxvc2lvbiIsImNvbnN0cnVjdG9yIiwiZ2FtZSIsInNpemUiLCJwb3NpdGlvbiIsImV4cGxvc2lvblR5cGUiLCJ2ZWxvY2l0eURlbHRhIiwiaW1hZ2UiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzcmMiLCJhcmdzT2JqIiwidmVsb2NpdHkiLCJzcGVlZCIsImhlYWx0aCIsIndpZHRoIiwiaGVpZ2h0IiwidHlwZSIsIm1heEZyYW1lcyIsImltZ1NpemUiLCJjdXRTaXplIiwiZnJhbWUiLCJkcmF3IiwiY3R4IiwieU9mZnNldCIsIk1hdGgiLCJmbG9vciIsInhPZmZzZXQiLCJkcmF3SW1hZ2UiLCJyZW1vdmUiLCJ1cGRhdGVWZWxvY2l0eSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/explosion.js\n");

/***/ }),

/***/ "./src/scripts/game.js":
/*!*****************************!*\
  !*** ./src/scripts/game.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _player_ship__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./player_ship */ \"./src/scripts/player_ship.js\");\n/* harmony import */ var _enemy_ship__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enemy_ship */ \"./src/scripts/enemy_ship.js\");\n/* harmony import */ var _boss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./boss */ \"./src/scripts/boss.js\");\n/* harmony import */ var _sound__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sound */ \"./src/scripts/sound.js\");\n/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./timer */ \"./src/scripts/timer.js\");\n// Game class handles all game state logic\n\n\n\n\n\n\nclass Game {\n  static MAX_ENEMY_WAVE = 5;\n  constructor(canvas, gameView) {\n    this.canvas = canvas;\n    this.canvasWidth = canvas.width;\n    this.canvasHeight = canvas.height;\n    this.gameView = gameView;\n    this.enemyWave = 0;\n    this.addEnemyOnCooldown = true;\n    this.addedEnemies = 0;\n    this.enemiesRemaining = 0;\n    this.enemyWaveCount = 0;\n    this.score = 0;\n    this.gameOver = false;\n    this.win = false;\n    this.secretEnd = false;\n    this.startScreen = true;\n\n    // all moving objects and timers have a unique game id\n    this.idCounter = 1;\n    this.timers = {};\n    this.allMovingObjects = {\n      player: {},\n      enemies: {},\n      projectiles: {},\n      explosions: {}\n    };\n    this.player = new _player_ship__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this);\n    this.bossFight = false;\n    this.boss = null;\n\n    // all sounds in the game handled with the Sound class\n    this.sounds = new _sound__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this);\n  }\n\n  // apply game logic to determine next state of the game for next animation frame\n  // time changes, handled by GameView, are used to smooth gameplay during fps changes\n  step(timeDelta) {\n    this.checkCollisions();\n    if (!this.bossFight) this.setEnemies();\n    this.moveObjects(timeDelta);\n    this.shootProjectiles();\n  }\n  pauseTimers() {\n    Object.values(this.timers).forEach(timer => timer.pause());\n  }\n  resumeTimers() {\n    Object.values(this.timers).forEach(timer => timer.resume());\n  }\n\n  // call move() for all MovingObject objects\n  moveObjects(timeDelta) {\n    for (let key in this.allMovingObjects) {\n      Object.values(this.allMovingObjects[key]).forEach(obj => obj.move(timeDelta));\n    }\n  }\n\n  // call shoot() for all Ship objects (player and enemies)\n  shootProjectiles() {\n    this.player.shootProjectile();\n    Object.values(this.allMovingObjects.enemies).forEach(enemy => enemy.shootProjectile());\n  }\n\n  // first check projectile collisions, then check player to enemy ship collisions\n  checkCollisions() {\n    Object.values(this.allMovingObjects.projectiles).forEach(projectile => {\n      if (projectile.origin === \"player\") {\n        Object.values(this.allMovingObjects.enemies).forEach(enemy => {\n          enemy.collideCheck(projectile);\n        });\n      } else {\n        this.player.collideCheck(projectile);\n      }\n    });\n    Object.values(this.allMovingObjects.enemies).forEach(enemy => {\n      this.player.collideCheck(enemy);\n    });\n  }\n\n  // heal player 3hp per round (up to max health)\n  healPlayer() {\n    if (this.allMovingObjects.player && this.player.health > 0) {\n      this.player.health = Math.min(this.player.health + 3, _player_ship__WEBPACK_IMPORTED_MODULE_0__[\"default\"].MAX_HEALTH);\n    }\n  }\n\n  // next wave if 0 enemies remaining, activate boss fight if last wave finished\n  // increases enemies per wave\n  // multiply score by remaining player health, and then heal player\n  setEnemies() {\n    if (this.enemiesRemaining === 0) {\n      if (this.enemyWave < Game.MAX_ENEMY_WAVE) {\n        this.enemyWave += 1;\n        this.enemyWaveCount = this.enemyWave * 5;\n        this.enemiesRemaining = this.enemyWaveCount;\n        this.addedEnemies = 0;\n        if (this.enemyWave > 1) {\n          this.score += this.player.health * 100;\n          this.healPlayer();\n        }\n      } else {\n        this.setBoss();\n      }\n    }\n\n    // throughout a wave, enemies are placed in clusters of 3 to 10 at different intervals\n    if (!this.addEnemyOnCooldown) {\n      const remaining = this.enemyWaveCount - this.addedEnemies;\n      let numNewEnemies;\n      if (remaining < 10) {\n        numNewEnemies = remaining;\n      } else {\n        numNewEnemies = Math.floor(Math.random() * (10 - 3) + 3);\n      }\n      this.addedEnemies += numNewEnemies;\n\n      // randomize position, speed, and shoot cooldown for each enemy\n      for (let i = 0; i < numNewEnemies; i++) {\n        const randPosX = Math.floor(Math.random() * this.canvasWidth);\n        const randSpeed = Math.random() * (5 - 2) + 2;\n        const randCooldown = Math.floor(Math.random() * (1000 - 450) + 450);\n        new _enemy_ship__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, randPosX, randSpeed, randCooldown);\n      }\n\n      // set cooldown before adding next group of enemies, reset flag in 1 to 3 seconds\n      this.addEnemyOnCooldown = true;\n      const randTimeOut = Math.random() * (3000 - 1000) + 1000;\n      new _timer__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this, this.resetAddEnemyCooldown.bind(this), randTimeOut);\n    }\n  }\n  resetAddEnemyCooldown() {\n    this.addEnemyOnCooldown = false;\n  }\n\n  // waits for all player projectiles to clear, and temporarily disable player (for cutscene to play) \n  // also heal player and update score\n  setBoss() {\n    this.player.disabled = true;\n    if (Object.values(this.allMovingObjects.projectiles).length === 0) {\n      this.sounds.switchBGM(\"bossIncomingBGM\");\n      this.boss = new _boss__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this);\n      this.score += this.player.health * 100;\n      this.healPlayer();\n      this.bossFight = true;\n      this.gameView.switchGameInformation();\n    }\n  }\n\n  // secret ending if both player and boss die\n  setWin() {\n    if (this.player?.health <= 0) this.secretEnd = true;\n    if (!this.gameOver) {\n      this.score += this.player.health * 200;\n      this.win = true;\n      this.sounds.playMajorSound(\"win\");\n    }\n  }\n  setGameOver() {\n    if (this.boss?.health <= 0) {\n      this.secretEnd = true;\n    } else if (!this.win) {\n      this.gameOver = true;\n      this.sounds.playMajorSound(\"gameOver\");\n    }\n  }\n\n  // resetting the game on retries\n  reset() {\n    this.enemyWave = 0;\n    this.addEnemyOnCooldown = true;\n    this.addedEnemies = 0;\n    this.enemiesRemaining = 0;\n    this.enemyWaveCount = 0;\n    this.score = 0;\n    this.gameOver = false;\n    this.win = false;\n    this.secretEnd = false;\n    this.startScreen = false;\n    for (const id in this.timers) delete this.timers[id];\n    for (const type in this.allMovingObjects) {\n      for (const id in this.allMovingObjects[type]) {\n        delete this.allMovingObjects[type][id];\n      }\n    }\n    this.idCounter = 1;\n    this.player = new _player_ship__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this);\n    this.boss = null;\n    this.bossFight = false;\n    this.gameView.switchGameInformation();\n    this.sounds.reset();\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Game);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/game.js\n");

/***/ }),

/***/ "./src/scripts/game_view.js":
/*!**********************************!*\
  !*** ./src/scripts/game_view.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./game */ \"./src/scripts/game.js\");\n/* harmony import */ var _boss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./boss */ \"./src/scripts/boss.js\");\n// GameView handles anything canvas/html related, and event handlers\n// Also creates the single Game object that handles all game logic\n\n\n\nclass GameView {\n  // player movement keybind mappings\n  static UP_KEYS = [\"ArrowUp\", 'w'];\n  static DOWN_KEYS = [\"ArrowDown\", 's'];\n  static RIGHT_KEYS = [\"ArrowRight\", 'd'];\n  static LEFT_KEYS = [\"ArrowLeft\", 'a'];\n\n  // prevent shooting when clicking these html elements\n  static IGNORE_TARGETS = [\"sound-on\", \"sound-off\", \"sound-icons-container\", \"touch-on\", \"touch-off\", \"touch-container\", \"pause-on\", \"pause-off\", \"pause-container\"];\n  constructor(canvas, canvasContext) {\n    this.ctx = canvasContext;\n    this.canvas = canvas;\n    this.canvasWidth = canvas.width;\n    this.canvasHeight = canvas.height;\n    this.game = new _game__WEBPACK_IMPORTED_MODULE_0__[\"default\"](canvas, this);\n\n    // html game info elements that get updated throughout the game\n    this.scoreSpan = document.getElementById(\"score\");\n    this.playerHealthBar = document.getElementById(\"player-health-bar\");\n    this.bossHealthBar = document.getElementById(\"boss-health-bar\");\n    this.bossInfo = document.getElementById(\"boss-info\");\n    this.waveInfo = document.getElementById(\"wave-info\");\n    this.waveSpan = document.getElementById(\"wave-number\");\n    this.enemiesRemainingSpan = document.getElementById(\"enemies-remaining\");\n\n    // moving background in the canvas element\n    // x, y are the background position offsets as it moves (only y changes)\n    // dy controls change in speed\n    const backgroundImg = new Image();\n    backgroundImg.src = \"src/assets/images/game_background.png\";\n    this.bgSettings = {\n      img: backgroundImg,\n      x: 0,\n      y: 700,\n      dy: 0.5\n    };\n\n    // mouse follow options\n    this.touchOnElement = document.getElementById(\"touch-on\");\n    this.touchOffElement = document.getElementById(\"touch-off\");\n    this.mouseFollow = false;\n    this.mousePosition = null; // {x: xValue, y: yValue}\n\n    // pause options\n    this.pauseOnElement = document.getElementById(\"pause-on\");\n    this.pauseOffElement = document.getElementById(\"pause-off\");\n    this.pauseText = document.getElementById(\"pause-text\");\n    this.pause = false;\n    this.toggleSound = false;\n\n    // only want to draw start, win, and game over messages once;\n    this.messageDrawn = false;\n    this.bindSettingListeners();\n    this.bindStartHandler();\n  }\n\n  // starts up the animate recursive call loop, and draws initial background\n  start() {\n    this.lastTime = 0;\n    this.drawBackground();\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  // draw next state of the game, or start/win/game over message\n  // takes in time, which is automatically given and kept track off in recursive calls\n  animate(time) {\n    if (this.game.startScreen || this.game.gameOver || this.game.win) {\n      if (this.pause) this.handlePauseToggle();\n      this.drawStartWinGameOver();\n    } else if (!this.pause) {\n      this.draw();\n      this.updateGameInfo();\n      const timeDelta = time - this.lastTime;\n      this.game.step(timeDelta);\n    }\n    this.lastTime = time;\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  // draw start/win/game over message once and remove player controls\n  drawStartWinGameOver() {\n    if (!this.messageDrawn) {\n      const message = this.game.startScreen ? [\"Clique pra começar\", \"COMEÇAR\"] : this.game.secretEnd ? \"🫡\" : this.game.gameOver ? \"PERDEU O JOGO\" : \"VENCEU O JOGO\";\n      this.ctx.textAlign = \"center\";\n      this.ctx.fillStyle = \"white\";\n      if (this.game.startScreen) {\n        this.ctx.font = \"40px roboto\";\n        this.ctx.fillText(message[0], this.canvasWidth / 2, this.canvasHeight / 2 - 50);\n        this.ctx.font = \"48px roboto\";\n        this.ctx.fillText(message[1], this.canvasWidth / 2, this.canvasHeight / 2);\n      } else {\n        this.ctx.font = \"48px roboto\";\n        this.ctx.fillText(message, this.canvasWidth / 2, this.canvasHeight / 2);\n      }\n      this.messageDrawn = true;\n      if (this.game.gameOver || this.game.win) {\n        this.removeControlHandlers();\n        this.updateScore();\n        setTimeout(this.drawRetryKey.bind(this, this.ctx), 3000);\n      }\n      ;\n    }\n  }\n  drawRetryKey() {\n    const message = \"(CLIQUE NA TELA)\";\n    this.ctx.font = \"24px roboto\";\n    this.ctx.fillText(message, this.canvasWidth / 2, this.canvasHeight / 2 + 50);\n    this.bindRetryHandler();\n  }\n  drawPause() {\n    this.ctx.textAlign = \"center\";\n    this.ctx.fillStyle = \"white\";\n    this.ctx.font = \"48px roboto\";\n    this.ctx.fillText(\"PAUSADO\", this.canvasWidth / 2, this.canvasHeight / 2);\n  }\n\n  // draw moving background and then all game objects\n  draw() {\n    this.ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n    this.drawBackground();\n    for (let key in this.game.allMovingObjects) {\n      Object.values(this.game.allMovingObjects[key]).forEach(obj => obj.draw(this.ctx));\n    }\n  }\n\n  // canvas background moves vertically downward\n  drawBackground() {\n    const img = this.bgSettings.img;\n\n    // if end is reached, reset image back to beginning\n    if (this.bgSettings.y > this.canvasHeight) {\n      this.bgSettings.y -= img.height;\n    }\n\n    // if looping around, cut remaining end and draw below new\n    if (this.bgSettings.y > 0) {\n      this.ctx.drawImage(img, this.bgSettings.x, this.bgSettings.y - img.height, img.width, img.height);\n    }\n\n    // draw background and then update new position\n    this.ctx.drawImage(img, this.bgSettings.x, this.bgSettings.y, img.width, img.height);\n    this.bgSettings.y += this.bgSettings.dy;\n  }\n\n  // updates all game info related html elements\n  updateGameInfo() {\n    this.updateScore();\n    this.updateHealthBar('player');\n    if (this.game.bossFight) {\n      this.updateHealthBar('boss');\n    } else {\n      this.waveSpan.innerText = this.game.enemyWave;\n      this.enemiesRemainingSpan.innerText = this.game.enemiesRemaining;\n    }\n  }\n  updateScore() {\n    this.scoreSpan.innerText = this.game.score;\n  }\n\n  // updates either boss or player hp\n  // type is a string of either 'player' or 'boss'\n  updateHealthBar(type) {\n    let obj, healthBar;\n    if (type === 'player') {\n      obj = this.game.player;\n      healthBar = this.playerHealthBar;\n    } else {\n      obj = this.game.boss;\n      healthBar = this.bossHealthBar;\n    }\n    let health = obj.health;\n    const healthPoint = document.createElement(\"li\");\n    healthPoint.setAttribute(\"class\", `${type}-health-point`);\n    if (type === 'boss') health = Math.ceil(health / (_boss__WEBPACK_IMPORTED_MODULE_1__[\"default\"].MAX_HEALTH / 10));\n    if (healthBar.children.length < health) {\n      for (let i = 0; i < health - healthBar.children.length; i++) {\n        healthBar.appendChild(healthPoint);\n      }\n    } else if (healthBar.children.length > health) {\n      for (let i = 0; i < healthBar.children.length - health; i++) {\n        const lastChild = healthBar.lastChild;\n        if (lastChild) healthBar.removeChild(healthBar.lastChild);\n      }\n    }\n  }\n\n  // switches between boss and enemy wave html elements \n  switchGameInformation() {\n    if (this.game.bossFight) {\n      this.waveInfo.style.display = \"none\";\n      this.bossInfo.style.display = \"flex\";\n    } else {\n      this.waveInfo.style.display = \"flex\";\n      this.bossInfo.style.display = \"none\";\n    }\n  }\n\n  // start playing the game\n  handleStartKey(event) {\n    if (event?.key === \" \") event.preventDefault();\n    this.canvas.scrollIntoView();\n    this.game.sounds.switchBGM(\"waveBGM\");\n    this.game.startScreen = false;\n    document.removeEventListener(\"keypress\", this.startHandler);\n    this.canvas.removeEventListener(\"pointerdown\", this.startHandler);\n    this.bindControlHandlers();\n    setTimeout(this.game.resetAddEnemyCooldown.bind(this.game), 1500);\n    this.messageDrawn = false;\n  }\n  bindStartHandler() {\n    this.startHandler = this.handleStartKey.bind(this);\n    document.addEventListener(\"keypress\", this.startHandler);\n    this.canvas.addEventListener(\"pointerdown\", this.startHandler);\n  }\n\n  // retry on win/game over\n  handleRetryKey(event) {\n    if (event?.key === \" \") event.preventDefault();\n    this.canvas.scrollIntoView();\n    document.removeEventListener(\"keypress\", this.retryHandler);\n    this.canvas.removeEventListener(\"pointerdown\", this.retryHandler);\n    this.game.reset();\n    this.bindControlHandlers();\n    setTimeout(this.game.resetAddEnemyCooldown.bind(this.game), 1500);\n    this.messageDrawn = false;\n  }\n  bindRetryHandler() {\n    this.retryHandler = this.handleRetryKey.bind(this);\n    document.addEventListener(\"keypress\", this.retryHandler);\n    this.canvas.addEventListener(\"pointerdown\", this.retryHandler);\n  }\n\n  // mouse/touch follow movements\n  handleMouseMove(event) {\n    const rect = this.canvas.getBoundingClientRect();\n    const xScale = this.canvas.width / rect.width;\n    const yScale = this.canvas.height / rect.height;\n    const x = (event.clientX - rect.left) * xScale;\n    const y = (event.clientY - rect.top) * yScale;\n    this.mousePosition = {\n      x,\n      y\n    };\n  }\n  handleMouseOut() {\n    this.mousePosition = null;\n  }\n  handleMouseFollowToggle() {\n    if (this.mouseFollow) {\n      this.touchOnElement.style.display = 'none';\n      this.touchOffElement.style.display = 'block';\n    } else {\n      this.touchOnElement.style.display = 'block';\n      this.touchOffElement.style.display = 'none';\n    }\n    this.mouseFollow = !this.mouseFollow;\n  }\n\n  // pause/unpause\n  handlePauseToggle() {\n    if ((this.game.startScreen || this.game.gameOver || this.game.win) && !this.pause) {\n      return;\n    }\n    if (this.pause) {\n      this.game.resumeTimers();\n      this.pauseOnElement.style.display = 'none';\n      this.pauseOffElement.style.display = 'block';\n      this.pauseText.innerText = 'pause';\n    } else {\n      this.game.pauseTimers();\n      this.pauseOnElement.style.display = 'block';\n      this.pauseOffElement.style.display = 'none';\n      this.pauseText.innerText = 'play';\n      this.drawPause();\n    }\n    this.pause = !this.pause;\n  }\n\n  // pause and mute when tabbed out or game is out of focus\n  handleVisibilityChange() {\n    if (document.hidden && !(this.game.startScreen || this.game.gameOver || this.game.win) && !this.pause) {\n      this.handlePauseToggle();\n    }\n    if (document.hidden && this.game.sounds.toggle) {\n      this.game.sounds.handleSoundToggle();\n      this.toggleSound = true;\n    } else if (!document.hidden && this.toggleSound) {\n      this.game.sounds.handleSoundToggle();\n      this.toggleSound = false;\n    }\n  }\n\n  // setting option keybinds\n  handleSettingKeybinds(event) {\n    if (event.key === \"m\") this.handleMouseFollowToggle();else if (event.key === \"k\") this.game.sounds.handleSoundToggle();else if (event.key === \"p\") this.handlePauseToggle();\n  }\n\n  // binds all setting related handlers (pause/unpause, mouse/touch follow, mute/unmute)\n  bindSettingListeners() {\n    document.addEventListener(\"keydown\", this.handleSettingKeybinds.bind(this));\n    const touchContainer = document.getElementById(\"touch-icons-container\");\n    touchContainer.addEventListener(\"click\", this.handleMouseFollowToggle.bind(this));\n    if ('ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0) {\n      document.getElementById(\"touch-text\").innerText = \"touch follow\";\n      this.handleMouseFollowToggle();\n    }\n    const pauseContainer = document.getElementById(\"pause-icons-container\");\n    pauseContainer.addEventListener(\"click\", this.handlePauseToggle.bind(this));\n    document.addEventListener(\"visibilitychange\", this.handleVisibilityChange.bind(this));\n  }\n\n  // player controls (arrow/wasd to move, spacebar to shoot)\n  handleKeyDown(event) {\n    event.preventDefault();\n    if (GameView.RIGHT_KEYS.includes(event.key)) this.game.player.keysPressed.right = true;else if (GameView.LEFT_KEYS.includes(event.key)) this.game.player.keysPressed.left = true;else if (GameView.UP_KEYS.includes(event.key)) this.game.player.keysPressed.up = true;else if (GameView.DOWN_KEYS.includes(event.key)) this.game.player.keysPressed.down = true;else if (event.key === \" \") this.game.player.keysPressed.shoot = true;\n  }\n  handleKeyUp(event) {\n    event.preventDefault();\n    if (GameView.RIGHT_KEYS.includes(event.key)) this.game.player.keysPressed.right = false;else if (GameView.LEFT_KEYS.includes(event.key)) this.game.player.keysPressed.left = false;else if (GameView.UP_KEYS.includes(event.key)) this.game.player.keysPressed.up = false;else if (GameView.DOWN_KEYS.includes(event.key)) this.game.player.keysPressed.down = false;else if (event.key === \" \") this.game.player.keysPressed.shoot = false;\n  }\n\n  // mouse click/hold to shoot\n  handleMouseDown(event) {\n    const parentId = event.target.parentNode.id;\n    if (!GameView.IGNORE_TARGETS.includes(parentId)) this.game.player.keysPressed.shoot = true;\n  }\n  handleMouseUp() {\n    this.game.player.keysPressed.shoot = false;\n  }\n\n  // binding and removing player controls\n  bindControlHandlers() {\n    this.keyDownHandler = this.handleKeyDown.bind(this);\n    this.keyUpHandler = this.handleKeyUp.bind(this);\n    this.mouseDownHandler = this.handleMouseDown.bind(this);\n    this.mouseUpHandler = this.handleMouseUp.bind(this);\n    this.mouseMoveHandler = this.handleMouseMove.bind(this);\n    this.mouseOutHandler = this.handleMouseOut.bind(this);\n    document.addEventListener(\"keydown\", this.keyDownHandler);\n    document.addEventListener(\"keyup\", this.keyUpHandler);\n    document.addEventListener(\"pointerdown\", this.mouseDownHandler);\n    document.addEventListener(\"pointerup\", this.mouseUpHandler);\n    document.addEventListener(\"pointermove\", this.mouseMoveHandler);\n    document.addEventListener(\"pointerout\", this.mouseOutHandler);\n  }\n  removeControlHandlers() {\n    document.removeEventListener(\"keydown\", this.keyDownHandler);\n    document.removeEventListener(\"keyup\", this.keyUpHandler);\n    document.removeEventListener(\"pointerdown\", this.mouseDownHandler);\n    document.removeEventListener(\"pointerup\", this.mouseUpHandler);\n    document.removeEventListener(\"pointermove\", this.mouseMoveHandler);\n    document.removeEventListener(\"pointerout\", this.mouseOutHandler);\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (GameView);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SUFBSSxDQUFDMEMsY0FBYyxDQUFDO0lBQ3pEOUksUUFBUSxDQUFDb0csZ0JBQWdCLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQzJDLFlBQVksQ0FBQztJQUNyRC9JLFFBQVEsQ0FBQ29HLGdCQUFnQixDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUM0QyxnQkFBZ0IsQ0FBQztJQUMvRGhKLFFBQVEsQ0FBQ29HLGdCQUFnQixDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUM2QyxjQUFjLENBQUM7SUFDM0RqSixRQUFRLENBQUNvRyxnQkFBZ0IsQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDOEMsZ0JBQWdCLENBQUM7SUFDL0RsSixRQUFRLENBQUNvRyxnQkFBZ0IsQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDK0MsZUFBZSxDQUFDO0VBQy9EO0VBRUFqRyxxQkFBcUJBLENBQUEsRUFBRztJQUN0QmxELFFBQVEsQ0FBQ2dHLG1CQUFtQixDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUM4QyxjQUFjLENBQUM7SUFDNUQ5SSxRQUFRLENBQUNnRyxtQkFBbUIsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDK0MsWUFBWSxDQUFDO0lBQ3hEL0ksUUFBUSxDQUFDZ0csbUJBQW1CLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQ2dELGdCQUFnQixDQUFDO0lBQ2xFaEosUUFBUSxDQUFDZ0csbUJBQW1CLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQ2lELGNBQWMsQ0FBQztJQUM5RGpKLFFBQVEsQ0FBQ2dHLG1CQUFtQixDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUNrRCxnQkFBZ0IsQ0FBQztJQUNsRWxKLFFBQVEsQ0FBQ2dHLG1CQUFtQixDQUFDLFlBQVksRUFBRSxJQUFJLENBQUNtRCxlQUFlLENBQUM7RUFDbEU7QUFDRjtBQUVBLCtEQUFlbkssUUFBUSIsInNvdXJjZXMiOlsid2VicGFjazovL2phdmFzY3JpcHQtcHJvamVjdC8uL3NyYy9zY3JpcHRzL2dhbWVfdmlldy5qcz84MGVlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEdhbWVWaWV3IGhhbmRsZXMgYW55dGhpbmcgY2FudmFzL2h0bWwgcmVsYXRlZCwgYW5kIGV2ZW50IGhhbmRsZXJzXG4vLyBBbHNvIGNyZWF0ZXMgdGhlIHNpbmdsZSBHYW1lIG9iamVjdCB0aGF0IGhhbmRsZXMgYWxsIGdhbWUgbG9naWNcblxuaW1wb3J0IEdhbWUgZnJvbSBcIi4vZ2FtZVwiO1xuaW1wb3J0IEJvc3MgZnJvbSBcIi4vYm9zc1wiO1xuXG5jbGFzcyBHYW1lVmlldyB7XG4gIC8vIHBsYXllciBtb3ZlbWVudCBrZXliaW5kIG1hcHBpbmdzXG4gIHN0YXRpYyBVUF9LRVlTID0gW1wiQXJyb3dVcFwiLCAndyddXG4gIHN0YXRpYyBET1dOX0tFWVMgPSBbXCJBcnJvd0Rvd25cIiwgJ3MnXVxuICBzdGF0aWMgUklHSFRfS0VZUyA9IFtcIkFycm93UmlnaHRcIiwgJ2QnXVxuICBzdGF0aWMgTEVGVF9LRVlTID0gW1wiQXJyb3dMZWZ0XCIsICdhJ11cblxuICAvLyBwcmV2ZW50IHNob290aW5nIHdoZW4gY2xpY2tpbmcgdGhlc2UgaHRtbCBlbGVtZW50c1xuICBzdGF0aWMgSUdOT1JFX1RBUkdFVFMgPSBbXG4gICAgXCJzb3VuZC1vblwiLCBcbiAgICBcInNvdW5kLW9mZlwiLCBcbiAgICBcInNvdW5kLWljb25zLWNvbnRhaW5lclwiLCBcbiAgICBcInRvdWNoLW9uXCIsIFxuICAgIFwidG91Y2gtb2ZmXCIsIFxuICAgIFwidG91Y2gtY29udGFpbmVyXCIsXG4gICAgXCJwYXVzZS1vblwiLCBcbiAgICBcInBhdXNlLW9mZlwiLCBcbiAgICBcInBhdXNlLWNvbnRhaW5lclwiXG4gIF1cblxuICBjb25zdHJ1Y3RvcihjYW52YXMsIGNhbnZhc0NvbnRleHQpIHtcbiAgICB0aGlzLmN0eCA9IGNhbnZhc0NvbnRleHQ7XG4gICAgdGhpcy5jYW52YXMgPSBjYW52YXM7XG4gICAgdGhpcy5jYW52YXNXaWR0aCA9IGNhbnZhcy53aWR0aDtcbiAgICB0aGlzLmNhbnZhc0hlaWdodCA9IGNhbnZhcy5oZWlnaHQ7XG4gICAgdGhpcy5nYW1lID0gbmV3IEdhbWUoY2FudmFzLCB0aGlzKTtcblxuICAgIC8vIGh0bWwgZ2FtZSBpbmZvIGVsZW1lbnRzIHRoYXQgZ2V0IHVwZGF0ZWQgdGhyb3VnaG91dCB0aGUgZ2FtZVxuICAgIHRoaXMuc2NvcmVTcGFuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzY29yZVwiKTtcbiAgICB0aGlzLnBsYXllckhlYWx0aEJhciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicGxheWVyLWhlYWx0aC1iYXJcIik7XG4gICAgdGhpcy5ib3NzSGVhbHRoQmFyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJib3NzLWhlYWx0aC1iYXJcIik7XG4gICAgdGhpcy5ib3NzSW5mbyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYm9zcy1pbmZvXCIpO1xuICAgIHRoaXMud2F2ZUluZm8gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIndhdmUtaW5mb1wiKTtcbiAgICB0aGlzLndhdmVTcGFuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ3YXZlLW51bWJlclwiKTtcbiAgICB0aGlzLmVuZW1pZXNSZW1haW5pbmdTcGFuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJlbmVtaWVzLXJlbWFpbmluZ1wiKTtcblxuICAgIC8vIG1vdmluZyBiYWNrZ3JvdW5kIGluIHRoZSBjYW52YXMgZWxlbWVudFxuICAgIC8vIHgsIHkgYXJlIHRoZSBiYWNrZ3JvdW5kIHBvc2l0aW9uIG9mZnNldHMgYXMgaXQgbW92ZXMgKG9ubHkgeSBjaGFuZ2VzKVxuICAgIC8vIGR5IGNvbnRyb2xzIGNoYW5nZSBpbiBzcGVlZFxuICAgIGNvbnN0IGJhY2tncm91bmRJbWcgPSBuZXcgSW1hZ2UoKTtcbiAgICBiYWNrZ3JvdW5kSW1nLnNyYyA9IFwic3JjL2Fzc2V0cy9pbWFnZXMvZ2FtZV9iYWNrZ3JvdW5kLnBuZ1wiO1xuICAgIHRoaXMuYmdTZXR0aW5ncyA9IHtcbiAgICAgIGltZzogYmFja2dyb3VuZEltZyxcbiAgICAgIHg6IDAsXG4gICAgICB5OiA3MDAsXG4gICAgICBkeTogMC41XG4gICAgfVxuXG4gICAgLy8gbW91c2UgZm9sbG93IG9wdGlvbnNcbiAgICB0aGlzLnRvdWNoT25FbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0b3VjaC1vblwiKTtcbiAgICB0aGlzLnRvdWNoT2ZmRWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidG91Y2gtb2ZmXCIpO1xuICAgIHRoaXMubW91c2VGb2xsb3cgPSBmYWxzZTtcbiAgICB0aGlzLm1vdXNlUG9zaXRpb24gPSBudWxsOyAvLyB7eDogeFZhbHVlLCB5OiB5VmFsdWV9XG4gICAgXG4gICAgLy8gcGF1c2Ugb3B0aW9uc1xuICAgIHRoaXMucGF1c2VPbkVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInBhdXNlLW9uXCIpO1xuICAgIHRoaXMucGF1c2VPZmZFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwYXVzZS1vZmZcIik7XG4gICAgdGhpcy5wYXVzZVRleHQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInBhdXNlLXRleHRcIik7XG4gICAgdGhpcy5wYXVzZSA9IGZhbHNlO1xuICAgIHRoaXMudG9nZ2xlU291bmQgPSBmYWxzZTtcblxuICAgIC8vIG9ubHkgd2FudCB0byBkcmF3IHN0YXJ0LCB3aW4sIGFuZCBnYW1lIG92ZXIgbWVzc2FnZXMgb25jZTtcbiAgICB0aGlzLm1lc3NhZ2VEcmF3biA9IGZhbHNlO1xuXG4gICAgdGhpcy5iaW5kU2V0dGluZ0xpc3RlbmVycygpO1xuICAgIHRoaXMuYmluZFN0YXJ0SGFuZGxlcigpO1xuICB9XG4gIFxuICAvLyBzdGFydHMgdXAgdGhlIGFuaW1hdGUgcmVjdXJzaXZlIGNhbGwgbG9vcCwgYW5kIGRyYXdzIGluaXRpYWwgYmFja2dyb3VuZFxuICBzdGFydCgpIHtcbiAgICB0aGlzLmxhc3RUaW1lID0gMDtcbiAgICB0aGlzLmRyYXdCYWNrZ3JvdW5kKCk7XG4gICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMuYW5pbWF0ZS5iaW5kKHRoaXMpKTtcbiAgfVxuXG4gIC8vIGRyYXcgbmV4dCBzdGF0ZSBvZiB0aGUgZ2FtZSwgb3Igc3RhcnQvd2luL2dhbWUgb3ZlciBtZXNzYWdlXG4gIC8vIHRha2VzIGluIHRpbWUsIHdoaWNoIGlzIGF1dG9tYXRpY2FsbHkgZ2l2ZW4gYW5kIGtlcHQgdHJhY2sgb2ZmIGluIHJlY3Vyc2l2ZSBjYWxsc1xuICBhbmltYXRlKHRpbWUpIHtcbiAgICBpZiAodGhpcy5nYW1lLnN0YXJ0U2NyZWVuIHx8IHRoaXMuZ2FtZS5nYW1lT3ZlciB8fCB0aGlzLmdhbWUud2luKSB7XG4gICAgICBpZiAodGhpcy5wYXVzZSkgdGhpcy5oYW5kbGVQYXVzZVRvZ2dsZSgpO1xuICAgICAgdGhpcy5kcmF3U3RhcnRXaW5HYW1lT3ZlcigpO1xuICAgIH0gZWxzZSBpZiAoIXRoaXMucGF1c2UpIHtcbiAgICAgIHRoaXMuZHJhdygpO1xuICAgICAgdGhpcy51cGRhdGVHYW1lSW5mbygpO1xuICAgICAgY29uc3QgdGltZURlbHRhID0gdGltZSAtIHRoaXMubGFzdFRpbWU7XG4gICAgICB0aGlzLmdhbWUuc3RlcCh0aW1lRGVsdGEpO1xuICAgIH1cblxuICAgIHRoaXMubGFzdFRpbWUgPSB0aW1lO1xuICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLmFuaW1hdGUuYmluZCh0aGlzKSk7XG4gIH1cblxuICAvLyBkcmF3IHN0YXJ0L3dpbi9nYW1lIG92ZXIgbWVzc2FnZSBvbmNlIGFuZCByZW1vdmUgcGxheWVyIGNvbnRyb2xzXG4gIGRyYXdTdGFydFdpbkdhbWVPdmVyKCkge1xuICAgIGlmICghdGhpcy5tZXNzYWdlRHJhd24pIHtcbiAgICAgIGNvbnN0IG1lc3NhZ2UgPSB0aGlzLmdhbWUuc3RhcnRTY3JlZW4gXG4gICAgICAgICAgICAgICAgICAgICAgPyAgW1wiQ2xpcXVlIHByYSBjb21lw6dhclwiLCBcIkNPTUXDh0FSXCJdXG4gICAgICAgICAgICAgICAgICAgICAgOiB0aGlzLmdhbWUuc2VjcmV0RW5kXG4gICAgICAgICAgICAgICAgICAgICAgICA/IFwi8J+roVwiXG4gICAgICAgICAgICAgICAgICAgICAgICA6IHRoaXMuZ2FtZS5nYW1lT3ZlclxuICAgICAgICAgICAgICAgICAgICAgICAgICA/IFwiUEVSREVVIE8gSk9HT1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDogXCJWRU5DRVUgTyBKT0dPXCJcblxuICAgICAgdGhpcy5jdHgudGV4dEFsaWduID0gXCJjZW50ZXJcIjtcbiAgICAgIHRoaXMuY3R4LmZpbGxTdHlsZSA9IFwid2hpdGVcIjtcblxuICAgICAgaWYgKHRoaXMuZ2FtZS5zdGFydFNjcmVlbikge1xuICAgICAgICB0aGlzLmN0eC5mb250ID0gXCI0MHB4IHJvYm90b1wiO1xuICAgICAgICB0aGlzLmN0eC5maWxsVGV4dChtZXNzYWdlWzBdLCB0aGlzLmNhbnZhc1dpZHRoLzIsIHRoaXMuY2FudmFzSGVpZ2h0LzIgLSA1MCk7XG4gICAgICAgIHRoaXMuY3R4LmZvbnQgPSBcIjQ4cHggcm9ib3RvXCI7XG4gICAgICAgIHRoaXMuY3R4LmZpbGxUZXh0KG1lc3NhZ2VbMV0sIHRoaXMuY2FudmFzV2lkdGgvMiwgdGhpcy5jYW52YXNIZWlnaHQvMik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmN0eC5mb250ID0gXCI0OHB4IHJvYm90b1wiO1xuICAgICAgICB0aGlzLmN0eC5maWxsVGV4dChtZXNzYWdlLCB0aGlzLmNhbnZhc1dpZHRoLzIsIHRoaXMuY2FudmFzSGVpZ2h0LzIpO1xuICAgICAgfVxuICAgICAgdGhpcy5tZXNzYWdlRHJhd24gPSB0cnVlO1xuXG4gICAgICBpZiAodGhpcy5nYW1lLmdhbWVPdmVyIHx8IHRoaXMuZ2FtZS53aW4pIHtcbiAgICAgICAgdGhpcy5yZW1vdmVDb250cm9sSGFuZGxlcnMoKTtcbiAgICAgICAgdGhpcy51cGRhdGVTY29yZSgpO1xuICAgICAgICBzZXRUaW1lb3V0KHRoaXMuZHJhd1JldHJ5S2V5LmJpbmQodGhpcywgdGhpcy5jdHgpLCAzMDAwKVxuICAgICAgfTtcbiAgICB9XG4gIH1cblxuICBkcmF3UmV0cnlLZXkoKSB7XG4gICAgY29uc3QgbWVzc2FnZSA9IFwiKENMSVFVRSBOQSBURUxBKVwiO1xuICAgIHRoaXMuY3R4LmZvbnQgPSBcIjI0cHggcm9ib3RvXCI7XG4gICAgdGhpcy5jdHguZmlsbFRleHQobWVzc2FnZSwgdGhpcy5jYW52YXNXaWR0aC8yLCB0aGlzLmNhbnZhc0hlaWdodC8yICsgNTApO1xuICAgIHRoaXMuYmluZFJldHJ5SGFuZGxlcigpO1xuICB9XG5cbiAgZHJhd1BhdXNlKCkge1xuICAgIHRoaXMuY3R4LnRleHRBbGlnbiA9IFwiY2VudGVyXCI7XG4gICAgdGhpcy5jdHguZmlsbFN0eWxlID0gXCJ3aGl0ZVwiO1xuICAgIHRoaXMuY3R4LmZvbnQgPSBcIjQ4cHggcm9ib3RvXCI7XG4gICAgdGhpcy5jdHguZmlsbFRleHQoXCJQQVVTQURPXCIsIHRoaXMuY2FudmFzV2lkdGgvMiwgdGhpcy5jYW52YXNIZWlnaHQvMik7XG4gIH1cblxuICAvLyBkcmF3IG1vdmluZyBiYWNrZ3JvdW5kIGFuZCB0aGVuIGFsbCBnYW1lIG9iamVjdHNcbiAgZHJhdygpIHtcbiAgICB0aGlzLmN0eC5jbGVhclJlY3QoMCwgMCwgdGhpcy5jYW52YXNXaWR0aCwgdGhpcy5jYW52YXNIZWlnaHQpO1xuICAgIHRoaXMuZHJhd0JhY2tncm91bmQoKTtcblxuICAgIGZvciAobGV0IGtleSBpbiB0aGlzLmdhbWUuYWxsTW92aW5nT2JqZWN0cykge1xuICAgICAgT2JqZWN0LnZhbHVlcyh0aGlzLmdhbWUuYWxsTW92aW5nT2JqZWN0c1trZXldKS5mb3JFYWNoKG9iaiA9PiBvYmouZHJhdyh0aGlzLmN0eCkpO1xuICAgIH1cbiAgfVxuXG4gIC8vIGNhbnZhcyBiYWNrZ3JvdW5kIG1vdmVzIHZlcnRpY2FsbHkgZG93bndhcmRcbiAgZHJhd0JhY2tncm91bmQoKSB7XG4gICAgY29uc3QgaW1nID0gdGhpcy5iZ1NldHRpbmdzLmltZztcblxuICAgIC8vIGlmIGVuZCBpcyByZWFjaGVkLCByZXNldCBpbWFnZSBiYWNrIHRvIGJlZ2lubmluZ1xuICAgIGlmICh0aGlzLmJnU2V0dGluZ3MueSA+IHRoaXMuY2FudmFzSGVpZ2h0KSB7XG4gICAgICB0aGlzLmJnU2V0dGluZ3MueSAtPSBpbWcuaGVpZ2h0O1xuICAgIH1cblxuICAgIC8vIGlmIGxvb3BpbmcgYXJvdW5kLCBjdXQgcmVtYWluaW5nIGVuZCBhbmQgZHJhdyBiZWxvdyBuZXdcbiAgICBpZiAodGhpcy5iZ1NldHRpbmdzLnkgPiAwKSB7XG4gICAgICB0aGlzLmN0eC5kcmF3SW1hZ2UoaW1nLCB0aGlzLmJnU2V0dGluZ3MueCwgdGhpcy5iZ1NldHRpbmdzLnkgLSBpbWcuaGVpZ2h0LCBpbWcud2lkdGgsIGltZy5oZWlnaHQpO1xuICAgIH1cblxuICAgIC8vIGRyYXcgYmFja2dyb3VuZCBhbmQgdGhlbiB1cGRhdGUgbmV3IHBvc2l0aW9uXG4gICAgdGhpcy5jdHguZHJhd0ltYWdlKGltZywgdGhpcy5iZ1NldHRpbmdzLngsIHRoaXMuYmdTZXR0aW5ncy55LCBpbWcud2lkdGgsIGltZy5oZWlnaHQpO1xuICAgIHRoaXMuYmdTZXR0aW5ncy55ICs9IHRoaXMuYmdTZXR0aW5ncy5keTtcbiAgfVxuXG4gIC8vIHVwZGF0ZXMgYWxsIGdhbWUgaW5mbyByZWxhdGVkIGh0bWwgZWxlbWVudHNcbiAgdXBkYXRlR2FtZUluZm8oKSB7XG4gICAgdGhpcy51cGRhdGVTY29yZSgpO1xuICAgIHRoaXMudXBkYXRlSGVhbHRoQmFyKCdwbGF5ZXInKTtcblxuICAgIGlmICh0aGlzLmdhbWUuYm9zc0ZpZ2h0KSB7XG4gICAgICB0aGlzLnVwZGF0ZUhlYWx0aEJhcignYm9zcycpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLndhdmVTcGFuLmlubmVyVGV4dCA9IHRoaXMuZ2FtZS5lbmVteVdhdmU7XG4gICAgICB0aGlzLmVuZW1pZXNSZW1haW5pbmdTcGFuLmlubmVyVGV4dCA9IHRoaXMuZ2FtZS5lbmVtaWVzUmVtYWluaW5nO1xuICAgIH1cbiAgfVxuXG4gIHVwZGF0ZVNjb3JlKCkge1xuICAgIHRoaXMuc2NvcmVTcGFuLmlubmVyVGV4dCA9IHRoaXMuZ2FtZS5zY29yZTtcbiAgfVxuXG4gIC8vIHVwZGF0ZXMgZWl0aGVyIGJvc3Mgb3IgcGxheWVyIGhwXG4gIC8vIHR5cGUgaXMgYSBzdHJpbmcgb2YgZWl0aGVyICdwbGF5ZXInIG9yICdib3NzJ1xuICB1cGRhdGVIZWFsdGhCYXIodHlwZSkge1xuICAgIGxldCBvYmosIGhlYWx0aEJhcjtcbiAgICBpZiAodHlwZSA9PT0gJ3BsYXllcicpIHtcbiAgICAgIG9iaiA9IHRoaXMuZ2FtZS5wbGF5ZXI7XG4gICAgICBoZWFsdGhCYXIgPSB0aGlzLnBsYXllckhlYWx0aEJhcjtcbiAgICB9IGVsc2Uge1xuICAgICAgb2JqID0gdGhpcy5nYW1lLmJvc3M7XG4gICAgICBoZWFsdGhCYXIgPSB0aGlzLmJvc3NIZWFsdGhCYXI7XG4gICAgfVxuICAgIGxldCBoZWFsdGggPSBvYmouaGVhbHRoO1xuXG4gICAgY29uc3QgaGVhbHRoUG9pbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlcIik7XG4gICAgaGVhbHRoUG9pbnQuc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgYCR7dHlwZX0taGVhbHRoLXBvaW50YCk7XG5cbiAgICBpZiAodHlwZSA9PT0gJ2Jvc3MnKSBoZWFsdGggPSBNYXRoLmNlaWwoaGVhbHRoIC8gKEJvc3MuTUFYX0hFQUxUSCAvIDEwKSk7XG5cbiAgICBpZiAoaGVhbHRoQmFyLmNoaWxkcmVuLmxlbmd0aCA8IGhlYWx0aCkge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBoZWFsdGggLSBoZWFsdGhCYXIuY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaGVhbHRoQmFyLmFwcGVuZENoaWxkKGhlYWx0aFBvaW50KTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKChoZWFsdGhCYXIuY2hpbGRyZW4ubGVuZ3RoID4gaGVhbHRoKSkge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBoZWFsdGhCYXIuY2hpbGRyZW4ubGVuZ3RoIC0gaGVhbHRoOyBpKyspIHtcbiAgICAgICAgY29uc3QgbGFzdENoaWxkID0gaGVhbHRoQmFyLmxhc3RDaGlsZDtcbiAgICAgICAgaWYgKGxhc3RDaGlsZCkgaGVhbHRoQmFyLnJlbW92ZUNoaWxkKGhlYWx0aEJhci5sYXN0Q2hpbGQpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIHN3aXRjaGVzIGJldHdlZW4gYm9zcyBhbmQgZW5lbXkgd2F2ZSBodG1sIGVsZW1lbnRzIFxuICBzd2l0Y2hHYW1lSW5mb3JtYXRpb24oKSB7XG4gICAgaWYgKHRoaXMuZ2FtZS5ib3NzRmlnaHQpIHtcbiAgICAgIHRoaXMud2F2ZUluZm8uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgdGhpcy5ib3NzSW5mby5zdHlsZS5kaXNwbGF5ID0gXCJmbGV4XCI7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMud2F2ZUluZm8uc3R5bGUuZGlzcGxheSA9IFwiZmxleFwiO1xuICAgICAgdGhpcy5ib3NzSW5mby5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgfVxuICB9XG5cbiAgLy8gc3RhcnQgcGxheWluZyB0aGUgZ2FtZVxuICBoYW5kbGVTdGFydEtleShldmVudCkge1xuICAgIGlmIChldmVudD8ua2V5ID09PSBcIiBcIikgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgIHRoaXMuY2FudmFzLnNjcm9sbEludG9WaWV3KCk7XG4gICAgdGhpcy5nYW1lLnNvdW5kcy5zd2l0Y2hCR00oXCJ3YXZlQkdNXCIpO1xuICAgIHRoaXMuZ2FtZS5zdGFydFNjcmVlbiA9IGZhbHNlO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlwcmVzc1wiLCB0aGlzLnN0YXJ0SGFuZGxlcilcbiAgICB0aGlzLmNhbnZhcy5yZW1vdmVFdmVudExpc3RlbmVyKFwicG9pbnRlcmRvd25cIiwgdGhpcy5zdGFydEhhbmRsZXIpXG4gICAgdGhpcy5iaW5kQ29udHJvbEhhbmRsZXJzKCk7XG4gICAgc2V0VGltZW91dCh0aGlzLmdhbWUucmVzZXRBZGRFbmVteUNvb2xkb3duLmJpbmQodGhpcy5nYW1lKSwgMTUwMCk7XG4gICAgdGhpcy5tZXNzYWdlRHJhd24gPSBmYWxzZTtcbiAgfVxuXG4gIGJpbmRTdGFydEhhbmRsZXIoKSB7XG4gICAgdGhpcy5zdGFydEhhbmRsZXIgPSB0aGlzLmhhbmRsZVN0YXJ0S2V5LmJpbmQodGhpcyk7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleXByZXNzXCIsIHRoaXMuc3RhcnRIYW5kbGVyKTtcbiAgICB0aGlzLmNhbnZhcy5hZGRFdmVudExpc3RlbmVyKFwicG9pbnRlcmRvd25cIiwgdGhpcy5zdGFydEhhbmRsZXIpO1xuICB9XG5cbiAgLy8gcmV0cnkgb24gd2luL2dhbWUgb3ZlclxuICBoYW5kbGVSZXRyeUtleShldmVudCkge1xuICAgIGlmIChldmVudD8ua2V5ID09PSBcIiBcIikgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgIHRoaXMuY2FudmFzLnNjcm9sbEludG9WaWV3KCk7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleXByZXNzXCIsIHRoaXMucmV0cnlIYW5kbGVyKTtcbiAgICB0aGlzLmNhbnZhcy5yZW1vdmVFdmVudExpc3RlbmVyKFwicG9pbnRlcmRvd25cIiwgdGhpcy5yZXRyeUhhbmRsZXIpO1xuICAgIHRoaXMuZ2FtZS5yZXNldCgpO1xuICAgIHRoaXMuYmluZENvbnRyb2xIYW5kbGVycygpO1xuICAgIHNldFRpbWVvdXQodGhpcy5nYW1lLnJlc2V0QWRkRW5lbXlDb29sZG93bi5iaW5kKHRoaXMuZ2FtZSksIDE1MDApO1xuICAgIHRoaXMubWVzc2FnZURyYXduID0gZmFsc2U7XG4gIH1cblxuICBiaW5kUmV0cnlIYW5kbGVyKCkge1xuICAgIHRoaXMucmV0cnlIYW5kbGVyID0gdGhpcy5oYW5kbGVSZXRyeUtleS5iaW5kKHRoaXMpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlwcmVzc1wiLCB0aGlzLnJldHJ5SGFuZGxlcik7XG4gICAgdGhpcy5jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJkb3duXCIsIHRoaXMucmV0cnlIYW5kbGVyKTtcbiAgfVxuXG4gIC8vIG1vdXNlL3RvdWNoIGZvbGxvdyBtb3ZlbWVudHNcbiAgaGFuZGxlTW91c2VNb3ZlKGV2ZW50KSB7XG4gICAgY29uc3QgcmVjdCA9IHRoaXMuY2FudmFzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIGNvbnN0IHhTY2FsZSA9IHRoaXMuY2FudmFzLndpZHRoIC8gcmVjdC53aWR0aDtcbiAgICBjb25zdCB5U2NhbGUgPSB0aGlzLmNhbnZhcy5oZWlnaHQgLyByZWN0LmhlaWdodDtcbiAgICBjb25zdCB4ID0gKGV2ZW50LmNsaWVudFggLSByZWN0LmxlZnQpICogeFNjYWxlO1xuICAgIGNvbnN0IHkgPSAoZXZlbnQuY2xpZW50WSAtIHJlY3QudG9wKSAqIHlTY2FsZTtcbiAgICB0aGlzLm1vdXNlUG9zaXRpb24gPSB7eCwgeX07XG4gIH1cblxuICBoYW5kbGVNb3VzZU91dCgpIHtcbiAgICB0aGlzLm1vdXNlUG9zaXRpb24gPSBudWxsO1xuICB9XG5cbiAgaGFuZGxlTW91c2VGb2xsb3dUb2dnbGUoKSB7XG4gICAgaWYgKHRoaXMubW91c2VGb2xsb3cpIHtcbiAgICAgIHRoaXMudG91Y2hPbkVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgIHRoaXMudG91Y2hPZmZFbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnRvdWNoT25FbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgICAgdGhpcy50b3VjaE9mZkVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICB9XG5cbiAgICB0aGlzLm1vdXNlRm9sbG93ID0gIXRoaXMubW91c2VGb2xsb3c7XG4gIH1cblxuICAvLyBwYXVzZS91bnBhdXNlXG4gIGhhbmRsZVBhdXNlVG9nZ2xlKCkge1xuICAgIGlmICgodGhpcy5nYW1lLnN0YXJ0U2NyZWVuIHx8IHRoaXMuZ2FtZS5nYW1lT3ZlciB8fCB0aGlzLmdhbWUud2luKSAmJiAhdGhpcy5wYXVzZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmICh0aGlzLnBhdXNlKSB7XG4gICAgICB0aGlzLmdhbWUucmVzdW1lVGltZXJzKCk7XG4gICAgICB0aGlzLnBhdXNlT25FbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICB0aGlzLnBhdXNlT2ZmRWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICAgIHRoaXMucGF1c2VUZXh0LmlubmVyVGV4dCA9ICdwYXVzZSc7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZ2FtZS5wYXVzZVRpbWVycygpO1xuICAgICAgdGhpcy5wYXVzZU9uRWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICAgIHRoaXMucGF1c2VPZmZFbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICB0aGlzLnBhdXNlVGV4dC5pbm5lclRleHQgPSAncGxheSc7XG4gICAgICB0aGlzLmRyYXdQYXVzZSgpO1xuICAgIH1cblxuICAgIHRoaXMucGF1c2UgPSAhdGhpcy5wYXVzZTtcbiAgfVxuXG4gIC8vIHBhdXNlIGFuZCBtdXRlIHdoZW4gdGFiYmVkIG91dCBvciBnYW1lIGlzIG91dCBvZiBmb2N1c1xuICBoYW5kbGVWaXNpYmlsaXR5Q2hhbmdlKCkge1xuICAgIGlmIChcbiAgICAgIGRvY3VtZW50LmhpZGRlbiAmJiBcbiAgICAgICEodGhpcy5nYW1lLnN0YXJ0U2NyZWVuIHx8IHRoaXMuZ2FtZS5nYW1lT3ZlciB8fCB0aGlzLmdhbWUud2luKSAmJiBcbiAgICAgICF0aGlzLnBhdXNlXG4gICAgKSB7XG4gICAgICB0aGlzLmhhbmRsZVBhdXNlVG9nZ2xlKCk7XG4gICAgfVxuXG4gICAgaWYgKGRvY3VtZW50LmhpZGRlbiAmJiB0aGlzLmdhbWUuc291bmRzLnRvZ2dsZSkge1xuICAgICAgdGhpcy5nYW1lLnNvdW5kcy5oYW5kbGVTb3VuZFRvZ2dsZSgpO1xuICAgICAgdGhpcy50b2dnbGVTb3VuZCA9IHRydWU7XG4gICAgfSBlbHNlIGlmICghZG9jdW1lbnQuaGlkZGVuICYmIHRoaXMudG9nZ2xlU291bmQpIHtcbiAgICAgIHRoaXMuZ2FtZS5zb3VuZHMuaGFuZGxlU291bmRUb2dnbGUoKTtcbiAgICAgIHRoaXMudG9nZ2xlU291bmQgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICAvLyBzZXR0aW5nIG9wdGlvbiBrZXliaW5kc1xuICBoYW5kbGVTZXR0aW5nS2V5YmluZHMoZXZlbnQpIHtcbiAgICBpZiAoZXZlbnQua2V5ID09PSBcIm1cIikgdGhpcy5oYW5kbGVNb3VzZUZvbGxvd1RvZ2dsZSgpO1xuICAgIGVsc2UgaWYgKGV2ZW50LmtleSA9PT0gXCJrXCIpIHRoaXMuZ2FtZS5zb3VuZHMuaGFuZGxlU291bmRUb2dnbGUoKTtcbiAgICBlbHNlIGlmIChldmVudC5rZXkgPT09IFwicFwiKSB0aGlzLmhhbmRsZVBhdXNlVG9nZ2xlKCk7XG4gIH1cblxuICAvLyBiaW5kcyBhbGwgc2V0dGluZyByZWxhdGVkIGhhbmRsZXJzIChwYXVzZS91bnBhdXNlLCBtb3VzZS90b3VjaCBmb2xsb3csIG11dGUvdW5tdXRlKVxuICBiaW5kU2V0dGluZ0xpc3RlbmVycygpIHtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLmhhbmRsZVNldHRpbmdLZXliaW5kcy5iaW5kKHRoaXMpKTtcblxuICAgIGNvbnN0IHRvdWNoQ29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0b3VjaC1pY29ucy1jb250YWluZXJcIik7XG4gICAgdG91Y2hDb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuaGFuZGxlTW91c2VGb2xsb3dUb2dnbGUuYmluZCh0aGlzKSk7XG4gICAgaWYgKCggJ29udG91Y2hzdGFydCcgaW4gd2luZG93ICkgfHwgKCBuYXZpZ2F0b3IubWF4VG91Y2hQb2ludHMgPiAwICkgfHwgKCBuYXZpZ2F0b3IubXNNYXhUb3VjaFBvaW50cyA+IDAgKSkge1xuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0b3VjaC10ZXh0XCIpLmlubmVyVGV4dCA9IFwidG91Y2ggZm9sbG93XCJcbiAgICAgIHRoaXMuaGFuZGxlTW91c2VGb2xsb3dUb2dnbGUoKTtcbiAgICB9XG5cbiAgICBjb25zdCBwYXVzZUNvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicGF1c2UtaWNvbnMtY29udGFpbmVyXCIpO1xuICAgIHBhdXNlQ29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLmhhbmRsZVBhdXNlVG9nZ2xlLmJpbmQodGhpcykpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJ2aXNpYmlsaXR5Y2hhbmdlXCIsIHRoaXMuaGFuZGxlVmlzaWJpbGl0eUNoYW5nZS5iaW5kKHRoaXMpKTtcbiAgfVxuXG4gIC8vIHBsYXllciBjb250cm9scyAoYXJyb3cvd2FzZCB0byBtb3ZlLCBzcGFjZWJhciB0byBzaG9vdClcbiAgaGFuZGxlS2V5RG93bihldmVudCkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICBpZiAoR2FtZVZpZXcuUklHSFRfS0VZUy5pbmNsdWRlcyhldmVudC5rZXkpKSB0aGlzLmdhbWUucGxheWVyLmtleXNQcmVzc2VkLnJpZ2h0ID0gdHJ1ZTtcbiAgICBlbHNlIGlmIChHYW1lVmlldy5MRUZUX0tFWVMuaW5jbHVkZXMoZXZlbnQua2V5KSkgdGhpcy5nYW1lLnBsYXllci5rZXlzUHJlc3NlZC5sZWZ0ID0gdHJ1ZTtcbiAgICBlbHNlIGlmIChHYW1lVmlldy5VUF9LRVlTLmluY2x1ZGVzKGV2ZW50LmtleSkpIHRoaXMuZ2FtZS5wbGF5ZXIua2V5c1ByZXNzZWQudXAgPSB0cnVlO1xuICAgIGVsc2UgaWYgKEdhbWVWaWV3LkRPV05fS0VZUy5pbmNsdWRlcyhldmVudC5rZXkpKSB0aGlzLmdhbWUucGxheWVyLmtleXNQcmVzc2VkLmRvd24gPSB0cnVlO1xuICAgIGVsc2UgaWYgKGV2ZW50LmtleSA9PT0gXCIgXCIpIHRoaXMuZ2FtZS5wbGF5ZXIua2V5c1ByZXNzZWQuc2hvb3QgPSB0cnVlO1xuICB9XG4gIFxuICBoYW5kbGVLZXlVcChldmVudCkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICBpZiAoR2FtZVZpZXcuUklHSFRfS0VZUy5pbmNsdWRlcyhldmVudC5rZXkpKSB0aGlzLmdhbWUucGxheWVyLmtleXNQcmVzc2VkLnJpZ2h0ID0gZmFsc2U7XG4gICAgZWxzZSBpZiAoR2FtZVZpZXcuTEVGVF9LRVlTLmluY2x1ZGVzKGV2ZW50LmtleSkpIHRoaXMuZ2FtZS5wbGF5ZXIua2V5c1ByZXNzZWQubGVmdCA9IGZhbHNlO1xuICAgIGVsc2UgaWYgKEdhbWVWaWV3LlVQX0tFWVMuaW5jbHVkZXMoZXZlbnQua2V5KSkgdGhpcy5nYW1lLnBsYXllci5rZXlzUHJlc3NlZC51cCA9IGZhbHNlO1xuICAgIGVsc2UgaWYgKEdhbWVWaWV3LkRPV05fS0VZUy5pbmNsdWRlcyhldmVudC5rZXkpKSB0aGlzLmdhbWUucGxheWVyLmtleXNQcmVzc2VkLmRvd24gPSBmYWxzZTtcbiAgICBlbHNlIGlmIChldmVudC5rZXkgPT09IFwiIFwiKSB0aGlzLmdhbWUucGxheWVyLmtleXNQcmVzc2VkLnNob290ID0gZmFsc2U7XG4gIH1cblxuICAvLyBtb3VzZSBjbGljay9ob2xkIHRvIHNob290XG4gIGhhbmRsZU1vdXNlRG93bihldmVudCkge1xuICAgIGNvbnN0IHBhcmVudElkID0gZXZlbnQudGFyZ2V0LnBhcmVudE5vZGUuaWQ7XG4gICAgaWYgKCFHYW1lVmlldy5JR05PUkVfVEFSR0VUUy5pbmNsdWRlcyhwYXJlbnRJZCkpIHRoaXMuZ2FtZS5wbGF5ZXIua2V5c1ByZXNzZWQuc2hvb3QgPSB0cnVlO1xuICB9XG5cbiAgaGFuZGxlTW91c2VVcCgpIHtcbiAgICB0aGlzLmdhbWUucGxheWVyLmtleXNQcmVzc2VkLnNob290ID0gZmFsc2U7XG4gIH1cblxuICAvLyBiaW5kaW5nIGFuZCByZW1vdmluZyBwbGF5ZXIgY29udHJvbHNcbiAgYmluZENvbnRyb2xIYW5kbGVycygpIHtcbiAgICB0aGlzLmtleURvd25IYW5kbGVyID0gdGhpcy5oYW5kbGVLZXlEb3duLmJpbmQodGhpcyk7XG4gICAgdGhpcy5rZXlVcEhhbmRsZXIgPSB0aGlzLmhhbmRsZUtleVVwLmJpbmQodGhpcyk7XG4gICAgdGhpcy5tb3VzZURvd25IYW5kbGVyID0gdGhpcy5oYW5kbGVNb3VzZURvd24uYmluZCh0aGlzKTtcbiAgICB0aGlzLm1vdXNlVXBIYW5kbGVyID0gdGhpcy5oYW5kbGVNb3VzZVVwLmJpbmQodGhpcyk7XG4gICAgdGhpcy5tb3VzZU1vdmVIYW5kbGVyID0gdGhpcy5oYW5kbGVNb3VzZU1vdmUuYmluZCh0aGlzKTtcbiAgICB0aGlzLm1vdXNlT3V0SGFuZGxlciA9IHRoaXMuaGFuZGxlTW91c2VPdXQuYmluZCh0aGlzKTtcblxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMua2V5RG93bkhhbmRsZXIpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXl1cFwiLCB0aGlzLmtleVVwSGFuZGxlcik7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJkb3duXCIsIHRoaXMubW91c2VEb3duSGFuZGxlcik7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJ1cFwiLCB0aGlzLm1vdXNlVXBIYW5kbGVyKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwicG9pbnRlcm1vdmVcIiwgdGhpcy5tb3VzZU1vdmVIYW5kbGVyKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwicG9pbnRlcm91dFwiLCB0aGlzLm1vdXNlT3V0SGFuZGxlcik7XG4gIH1cblxuICByZW1vdmVDb250cm9sSGFuZGxlcnMoKSB7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5rZXlEb3duSGFuZGxlcik7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleXVwXCIsIHRoaXMua2V5VXBIYW5kbGVyKTtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwicG9pbnRlcmRvd25cIiwgdGhpcy5tb3VzZURvd25IYW5kbGVyKTtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwicG9pbnRlcnVwXCIsIHRoaXMubW91c2VVcEhhbmRsZXIpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJwb2ludGVybW92ZVwiLCB0aGlzLm1vdXNlTW92ZUhhbmRsZXIpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJwb2ludGVyb3V0XCIsIHRoaXMubW91c2VPdXRIYW5kbGVyKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBHYW1lVmlldzsiXSwibmFtZXMiOlsiR2FtZSIsIkJvc3MiLCJHYW1lVmlldyIsIlVQX0tFWVMiLCJET1dOX0tFWVMiLCJSSUdIVF9LRVlTIiwiTEVGVF9LRVlTIiwiSUdOT1JFX1RBUkdFVFMiLCJjb25zdHJ1Y3RvciIsImNhbnZhcyIsImNhbnZhc0NvbnRleHQiLCJjdHgiLCJjYW52YXNXaWR0aCIsIndpZHRoIiwiY2FudmFzSGVpZ2h0IiwiaGVpZ2h0IiwiZ2FtZSIsInNjb3JlU3BhbiIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJwbGF5ZXJIZWFsdGhCYXIiLCJib3NzSGVhbHRoQmFyIiwiYm9zc0luZm8iLCJ3YXZlSW5mbyIsIndhdmVTcGFuIiwiZW5lbWllc1JlbWFpbmluZ1NwYW4iLCJiYWNrZ3JvdW5kSW1nIiwiSW1hZ2UiLCJzcmMiLCJiZ1NldHRpbmdzIiwiaW1nIiwieCIsInkiLCJkeSIsInRvdWNoT25FbGVtZW50IiwidG91Y2hPZmZFbGVtZW50IiwibW91c2VGb2xsb3ciLCJtb3VzZVBvc2l0aW9uIiwicGF1c2VPbkVsZW1lbnQiLCJwYXVzZU9mZkVsZW1lbnQiLCJwYXVzZVRleHQiLCJwYXVzZSIsInRvZ2dsZVNvdW5kIiwibWVzc2FnZURyYXduIiwiYmluZFNldHRpbmdMaXN0ZW5lcnMiLCJiaW5kU3RhcnRIYW5kbGVyIiwic3RhcnQiLCJsYXN0VGltZSIsImRyYXdCYWNrZ3JvdW5kIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiYW5pbWF0ZSIsImJpbmQiLCJ0aW1lIiwic3RhcnRTY3JlZW4iLCJnYW1lT3ZlciIsIndpbiIsImhhbmRsZVBhdXNlVG9nZ2xlIiwiZHJhd1N0YXJ0V2luR2FtZU92ZXIiLCJkcmF3IiwidXBkYXRlR2FtZUluZm8iLCJ0aW1lRGVsdGEiLCJzdGVwIiwibWVzc2FnZSIsInNlY3JldEVuZCIsInRleHRBbGlnbiIsImZpbGxTdHlsZSIsImZvbnQiLCJmaWxsVGV4dCIsInJlbW92ZUNvbnRyb2xIYW5kbGVycyIsInVwZGF0ZVNjb3JlIiwic2V0VGltZW91dCIsImRyYXdSZXRyeUtleSIsImJpbmRSZXRyeUhhbmRsZXIiLCJkcmF3UGF1c2UiLCJjbGVhclJlY3QiLCJrZXkiLCJhbGxNb3ZpbmdPYmplY3RzIiwiT2JqZWN0IiwidmFsdWVzIiwiZm9yRWFjaCIsIm9iaiIsImRyYXdJbWFnZSIsInVwZGF0ZUhlYWx0aEJhciIsImJvc3NGaWdodCIsImlubmVyVGV4dCIsImVuZW15V2F2ZSIsImVuZW1pZXNSZW1haW5pbmciLCJzY29yZSIsInR5cGUiLCJoZWFsdGhCYXIiLCJwbGF5ZXIiLCJib3NzIiwiaGVhbHRoIiwiaGVhbHRoUG9pbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlIiwiTWF0aCIsImNlaWwiLCJNQVhfSEVBTFRIIiwiY2hpbGRyZW4iLCJsZW5ndGgiLCJpIiwiYXBwZW5kQ2hpbGQiLCJsYXN0Q2hpbGQiLCJyZW1vdmVDaGlsZCIsInN3aXRjaEdhbWVJbmZvcm1hdGlvbiIsInN0eWxlIiwiZGlzcGxheSIsImhhbmRsZVN0YXJ0S2V5IiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsInNjcm9sbEludG9WaWV3Iiwic291bmRzIiwic3dpdGNoQkdNIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInN0YXJ0SGFuZGxlciIsImJpbmRDb250cm9sSGFuZGxlcnMiLCJyZXNldEFkZEVuZW15Q29vbGRvd24iLCJhZGRFdmVudExpc3RlbmVyIiwiaGFuZGxlUmV0cnlLZXkiLCJyZXRyeUhhbmRsZXIiLCJyZXNldCIsImhhbmRsZU1vdXNlTW92ZSIsInJlY3QiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ4U2NhbGUiLCJ5U2NhbGUiLCJjbGllbnRYIiwibGVmdCIsImNsaWVudFkiLCJ0b3AiLCJoYW5kbGVNb3VzZU91dCIsImhhbmRsZU1vdXNlRm9sbG93VG9nZ2xlIiwicmVzdW1lVGltZXJzIiwicGF1c2VUaW1lcnMiLCJoYW5kbGVWaXNpYmlsaXR5Q2hhbmdlIiwiaGlkZGVuIiwidG9nZ2xlIiwiaGFuZGxlU291bmRUb2dnbGUiLCJoYW5kbGVTZXR0aW5nS2V5YmluZHMiLCJ0b3VjaENvbnRhaW5lciIsIndpbmRvdyIsIm5hdmlnYXRvciIsIm1heFRvdWNoUG9pbnRzIiwibXNNYXhUb3VjaFBvaW50cyIsInBhdXNlQ29udGFpbmVyIiwiaGFuZGxlS2V5RG93biIsImluY2x1ZGVzIiwia2V5c1ByZXNzZWQiLCJyaWdodCIsInVwIiwiZG93biIsInNob290IiwiaGFuZGxlS2V5VXAiLCJoYW5kbGVNb3VzZURvd24iLCJwYXJlbnRJZCIsInRhcmdldCIsInBhcmVudE5vZGUiLCJpZCIsImhhbmRsZU1vdXNlVXAiLCJrZXlEb3duSGFuZGxlciIsImtleVVwSGFuZGxlciIsIm1vdXNlRG93bkhhbmRsZXIiLCJtb3VzZVVwSGFuZGxlciIsIm1vdXNlTW92ZUhhbmRsZXIiLCJtb3VzZU91dEhhbmRsZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/game_view.js\n");

/***/ }),

/***/ "./src/scripts/moving_object.js":
/*!**************************************!*\
  !*** ./src/scripts/moving_object.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./src/scripts/utils.js\");\n// MovingObject is the top parent class for ships, projectiles, explosions, etc.\n\n\nclass MovingObject {\n  // for smoothing gameplay based on fps\n  static NORMAL_FRAME_TIME_DELTA = 1000 / 60;\n\n  // takes in an argument object with the following:\n  constructor(argsObject) {\n    this.position = argsObject[\"position\"]; // initial canvas position [int, int]\n    this.velocity = argsObject[\"velocity\"]; // initial velocity [int, int]\n    this.speed = argsObject[\"speed\"]; // initial speed\n    this.health = argsObject[\"health\"]; // initial health\n    this.game = argsObject[\"game\"]; // Game object\n    this.width = argsObject[\"width\"]; // image width\n    this.height = argsObject[\"height\"]; // image height\n    this.image = argsObject[\"image\"]; // image url\n    this.type = argsObject[\"type\"]; // type can be 'enemy', 'boss', 'player', or 'explosion'\n    this.rotationAngle = argsObject[\"rotation\"] || 0; // (optional) image rotation angle in degrees\n\n    // stores itself in the Game with an id\n    this.id = this.game.idCounter++;\n    this.game.allMovingObjects[this.type][this.id] = this;\n  }\n  draw(ctx) {\n    // ctx.drawImage(this.image, this.position[0], this.position[1], this.width, this.height);\n\n    // rotate from center\n    const [x, y] = this.position;\n    const [centerX, centerY] = [x + this.width / 2, y + this.height / 2];\n    ctx.save();\n    ctx.translate(centerX, centerY);\n    ctx.rotate(Math.PI / 180 * this.rotationAngle);\n    ctx.translate(-centerX, -centerY);\n    ctx.drawImage(this.image, x, y, this.width, this.height);\n    ctx.restore();\n  }\n\n  // checks collisions against all hitboxes of the other MovingObject\n  collideCheck(otherObj) {\n    // hitBoxCollisions is used by subclasses with more complex logic\n    const hitBoxCollisions = [];\n    this.getHitbox().forEach((thisBox, idx) => {\n      const collisionFound = otherObj.getHitbox().some(otherBox => {\n        // rectangleCollision is a utility function for mathematically determining collisions\n        return (0,_utils__WEBPACK_IMPORTED_MODULE_0__.rectangleCollision)(thisBox, otherBox);\n      });\n      if (collisionFound) hitBoxCollisions.push(idx);\n    });\n    if (hitBoxCollisions.length > 0) {\n      this.handleCollided(otherObj, hitBoxCollisions);\n    }\n  }\n\n  // will be overwritten by subclasses with more complex logic\n  handleCollided(otherObj) {\n    const otherObjClass = otherObj.constructor.name;\n\n    // three cases: ship to projectile, player to enemy, player to boss\n    if (otherObjClass === \"Projectile\") {\n      const damage = otherObj.health;\n      otherObj.remove();\n      this.damageTaken(damage);\n    } else if (otherObjClass === \"EnemyShip\") {\n      const damage = 1;\n      this.damageTaken(damage);\n    } else if (otherObjClass === \"Boss\") {\n      const damage = 3;\n      this.damageTaken(damage);\n    }\n  }\n  getHitbox() {\n    const [x, y] = this.position;\n    const width = this.width;\n    const height = this.height;\n    return [{\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }];\n  }\n\n  // movement is smoothed out during fps changes\n  move(timeDelta) {\n    this.updateVelocity();\n    const velocityScale = timeDelta / MovingObject.NORMAL_FRAME_TIME_DELTA;\n    const offsetX = this.velocity[0] * velocityScale;\n    const offsetY = this.velocity[1] * velocityScale;\n    const newX = this.position[0] + offsetX;\n    const newY = this.position[1] + offsetY;\n    this.handleBounds([newX, newY]);\n  }\n\n  // updates the position with a new [int, int]\n  handleBounds(newPosition) {\n    // to be changed in sub classes as needed\n    this.position = newPosition;\n  }\n  updateVelocity() {\n    // to be implemented in sub classes as needed\n  }\n\n  // these functions take in a y position as int\n  inUpperYHeightBounds(y) {\n    return y <= this.game.canvasHeight + this.height;\n  }\n  inUpperYBounds(y) {\n    return y >= 0;\n  }\n  inLowerYBounds(y) {\n    return y <= this.game.canvasHeight - this.height;\n  }\n  inYBounds(y) {\n    return this.inUpperYBounds(y) && this.inLowerYBounds(y);\n  }\n\n  // these functions take in a x position as int\n  inUpperXBounds(x) {\n    return x >= 0;\n  }\n  inLowerXBounds(x) {\n    return x <= this.game.canvasWidth - this.width;\n  }\n  inXBounds(x) {\n    return this.inUpperXBounds(x) && this.inLowerXBounds(x);\n  }\n\n  // takes in a position as [int, int]\n  inBounds(position) {\n    return this.inXBounds(position[0]) && this.inYBounds(position[1]);\n  }\n  remove() {\n    delete this.game.allMovingObjects[this.type][this.id];\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (MovingObject);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/moving_object.js\n");

/***/ }),

/***/ "./src/scripts/player_ship.js":
/*!************************************!*\
  !*** ./src/scripts/player_ship.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ship__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ship */ \"./src/scripts/ship.js\");\n/* harmony import */ var _explosion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./explosion */ \"./src/scripts/explosion.js\");\n/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./timer */ \"./src/scripts/timer.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"./src/scripts/utils.js\");\n// The player, aka the Galactic Defender\n\n\n\n\n\nclass PlayerShip extends _ship__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  static SPEED = 5;\n  static MAX_HEALTH = 10;\n  constructor(game) {\n    // Ship/MovingObject related arguments\n    let image = document.createElement(\"img\");\n    image.src = \"src/assets/images/player1.png\";\n    let height = 48;\n    let width = 37;\n    const objArgs = {\n      width: width,\n      height: height,\n      position: [Math.floor(game.canvasWidth / 2), game.canvasHeight - height],\n      velocity: [0, 0],\n      speed: PlayerShip.SPEED,\n      health: PlayerShip.MAX_HEALTH,\n      game: game,\n      image: image,\n      type: \"player\"\n    };\n\n    // Projectile related arguments\n    image = document.createElement(\"img\");\n    image.src = \"src/assets/images/player_projectile.png\";\n    const projectileArgs = [{\n      objArgs: {\n        velocity: [0, -10],\n        speed: 10,\n        health: 1,\n        game: game,\n        width: 5,\n        height: 20,\n        image: image\n      },\n      type: \"bullet\",\n      origin: \"player\",\n      projectileSound: \"playerProjectile\"\n    }];\n\n    // projectile pattern\n    const patternArgs = [{\n      positionDeltas: [[width / 2.3, 0]],\n      batchFireNum: 1,\n      batchFireInterval: 0,\n      cooldown: 250,\n      onCooldown: false,\n      timer: null,\n      projectileArgIndex: 0\n    }];\n    super(objArgs, projectileArgs, patternArgs);\n\n    // player controlled movements\n    this.keysPressed = {\n      up: false,\n      down: false,\n      left: false,\n      right: false,\n      shoot: false\n    };\n    this.disabled = false;\n    this.invincible = false;\n  }\n\n  // player ship unique hitboxes\n  getHitbox() {\n    const box1 = {\n      x: this.position[0] + this.width / 3,\n      y: this.position[1],\n      width: this.width / 3,\n      height: this.height\n    };\n    const box2 = {\n      x: this.position[0],\n      y: this.position[1] + this.height * .65,\n      width: this.width,\n      height: this.height / 5\n    };\n    return [box1, box2];\n  }\n\n  // velocity updated based on player controlled movements\n  updateVelocity() {\n    let newVelocity = [0, 0];\n\n    // when disabled, player auto moves downwards\n    if (this.disabled) {\n      newVelocity[1] = 2;\n    } else if (this.game.gameView.mouseFollow && this.game.gameView.mousePosition) {\n      // mouse/touch controlled movement handling\n      // movement is smoothed out for finer controls\n      const xDiff = this.game.gameView.mousePosition.x - (this.position[0] + this.width / 2);\n      const yDiff = this.game.gameView.mousePosition.y - (this.position[1] + this.height / 2);\n      const deadzone = 2;\n      if (xDiff > deadzone) {\n        newVelocity[0] += Math.min(this.speed, xDiff);\n      } else if (xDiff < -deadzone) {\n        newVelocity[0] -= Math.min(this.speed, -xDiff);\n      }\n      if (yDiff > deadzone) {\n        newVelocity[1] += Math.min(this.speed, yDiff);\n      } else if (yDiff < -deadzone) {\n        newVelocity[1] -= Math.min(this.speed, -yDiff);\n      }\n      if (newVelocity[0] && newVelocity[1]) {\n        const speed = (Math.abs(newVelocity[0]) + Math.abs(newVelocity[1])) / 2;\n        newVelocity = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.vectorScale)(newVelocity, speed);\n      }\n    } else {\n      // keyboard controlled movement handling\n      if (this.keysPressed.right) newVelocity[0] += this.speed;\n      if (this.keysPressed.left) newVelocity[0] -= this.speed;\n      if (this.keysPressed.up) newVelocity[1] -= this.speed;\n      if (this.keysPressed.down) newVelocity[1] += this.speed;\n      if (newVelocity[0] && newVelocity[1]) newVelocity = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.vectorScale)(newVelocity, this.speed);\n    }\n    this.velocity = newVelocity;\n  }\n\n  // shooting also controlled by player\n  shootProjectile() {\n    if (this.keysPressed.shoot && !this.disabled) super.shootProjectile();\n  }\n\n  // player must be within game screen at all times\n  handleBounds(newPosition) {\n    if (this.inXBounds(newPosition[0])) this.position[0] = newPosition[0];\n    if (this.inYBounds(newPosition[1])) this.position[1] = newPosition[1];\n  }\n\n  // player gets 1 sec of invicibility after taking damage\n  damageTaken(damage) {\n    if (!this.invincible && this.health >= 0) {\n      super.damageTaken(damage);\n      this.invincible = true;\n      this.game.sounds.add(\"playerHurt\");\n      new _timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, this.resetInvincibility.bind(this), 1000);\n    }\n  }\n  resetInvincibility() {\n    this.invincible = false;\n  }\n\n  // player unique death animation, and activates game over logic\n  remove() {\n    if (!this.disabled) {\n      this.disabled = true;\n      new _timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, () => {\n        const posX = this.position[0] - 40;\n        const posY = this.position[1] - 20;\n        new _explosion__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.game, 100, [posX, posY], \"major\", [0, 0]);\n        super.remove();\n        this.game.sounds.playMajorSound(\"playerDeath\");\n        new _timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, this.game.setGameOver.bind(this.game), 3000);\n      }, 1000);\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (PlayerShip);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUM7UUFDOUMsSUFBSXZFLDhDQUFLLENBQUMsSUFBSSxDQUFDTSxJQUFJLEVBQUUsSUFBSSxDQUFDQSxJQUFJLENBQUNrRSxXQUFXLENBQUNMLElBQUksQ0FBQyxJQUFJLENBQUM3RCxJQUFJLENBQUMsRUFBRSxJQUFJLENBQUM7TUFDbkUsQ0FBQyxFQUFFLElBQUksQ0FBQztJQUNWO0VBQ0Y7QUFDRjtBQUVBLCtEQUFlSixVQUFVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vamF2YXNjcmlwdC1wcm9qZWN0Ly4vc3JjL3NjcmlwdHMvcGxheWVyX3NoaXAuanM/ZTMxYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGUgcGxheWVyLCBha2EgdGhlIEdhbGFjdGljIERlZmVuZGVyXG5cbmltcG9ydCBTaGlwIGZyb20gXCIuL3NoaXBcIjtcbmltcG9ydCBFeHBsb3Npb24gZnJvbSBcIi4vZXhwbG9zaW9uXCI7XG5pbXBvcnQgVGltZXIgZnJvbSBcIi4vdGltZXJcIjtcbmltcG9ydCB7IHZlY3RvclNjYWxlIH0gZnJvbSBcIi4vdXRpbHNcIjtcblxuY2xhc3MgUGxheWVyU2hpcCBleHRlbmRzIFNoaXAge1xuICBzdGF0aWMgU1BFRUQgPSA1O1xuICBzdGF0aWMgTUFYX0hFQUxUSCA9IDEwO1xuXG4gIGNvbnN0cnVjdG9yKGdhbWUpIHtcbiAgICAvLyBTaGlwL01vdmluZ09iamVjdCByZWxhdGVkIGFyZ3VtZW50c1xuICAgIGxldCBpbWFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XG4gICAgaW1hZ2Uuc3JjID0gXCJzcmMvYXNzZXRzL2ltYWdlcy9wbGF5ZXIxLnBuZ1wiO1xuICAgIGxldCBoZWlnaHQgPSA0ODtcbiAgICBsZXQgd2lkdGggPSAzNztcbiAgICBjb25zdCBvYmpBcmdzID0ge1xuICAgICAgd2lkdGg6IHdpZHRoLFxuICAgICAgaGVpZ2h0OiBoZWlnaHQsXG4gICAgICBwb3NpdGlvbjogW01hdGguZmxvb3IoZ2FtZS5jYW52YXNXaWR0aCAvIDIpLCBnYW1lLmNhbnZhc0hlaWdodCAtIGhlaWdodF0sXG4gICAgICB2ZWxvY2l0eTogWzAsIDBdLFxuICAgICAgc3BlZWQ6IFBsYXllclNoaXAuU1BFRUQsXG4gICAgICBoZWFsdGg6IFBsYXllclNoaXAuTUFYX0hFQUxUSCxcbiAgICAgIGdhbWU6IGdhbWUsXG4gICAgICBpbWFnZTogaW1hZ2UsXG4gICAgICB0eXBlOiBcInBsYXllclwiXG4gICAgfVxuXG4gICAgLy8gUHJvamVjdGlsZSByZWxhdGVkIGFyZ3VtZW50c1xuICAgIGltYWdlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKTtcbiAgICBpbWFnZS5zcmMgPSBcInNyYy9hc3NldHMvaW1hZ2VzL3BsYXllcl9wcm9qZWN0aWxlLnBuZ1wiO1xuICAgIGNvbnN0IHByb2plY3RpbGVBcmdzID0gW3tcbiAgICAgIG9iakFyZ3M6IHtcbiAgICAgICAgdmVsb2NpdHk6IFswLCAtMTBdLFxuICAgICAgICBzcGVlZDogMTAsXG4gICAgICAgIGhlYWx0aDogMSxcbiAgICAgICAgZ2FtZTogZ2FtZSxcbiAgICAgICAgd2lkdGg6IDUsXG4gICAgICAgIGhlaWdodDogMjAsXG4gICAgICAgIGltYWdlOiBpbWFnZVxuICAgICAgfSxcbiAgICAgIHR5cGU6IFwiYnVsbGV0XCIsXG4gICAgICBvcmlnaW46IFwicGxheWVyXCIsXG4gICAgICBwcm9qZWN0aWxlU291bmQ6IFwicGxheWVyUHJvamVjdGlsZVwiXG4gICAgfV1cblxuICAgIC8vIHByb2plY3RpbGUgcGF0dGVyblxuICAgIGNvbnN0IHBhdHRlcm5BcmdzID0gW3tcbiAgICAgIHBvc2l0aW9uRGVsdGFzOiBbW3dpZHRoLygyLjMpLCAwXV0sXG4gICAgICBiYXRjaEZpcmVOdW06IDEsXG4gICAgICBiYXRjaEZpcmVJbnRlcnZhbDogMCxcbiAgICAgIGNvb2xkb3duOiAyNTAsXG4gICAgICBvbkNvb2xkb3duOiBmYWxzZSxcbiAgICAgIHRpbWVyOiBudWxsLFxuICAgICAgcHJvamVjdGlsZUFyZ0luZGV4OiAwXG4gICAgfV1cblxuICAgIHN1cGVyKG9iakFyZ3MsIHByb2plY3RpbGVBcmdzLCBwYXR0ZXJuQXJncyk7XG5cbiAgICAvLyBwbGF5ZXIgY29udHJvbGxlZCBtb3ZlbWVudHNcbiAgICB0aGlzLmtleXNQcmVzc2VkID0ge1xuICAgICAgdXA6IGZhbHNlLFxuICAgICAgZG93bjogZmFsc2UsXG4gICAgICBsZWZ0OiBmYWxzZSxcbiAgICAgIHJpZ2h0OiBmYWxzZSxcbiAgICAgIHNob290OiBmYWxzZVxuICAgIH1cbiAgICBcbiAgICB0aGlzLmRpc2FibGVkID0gZmFsc2U7XG4gICAgdGhpcy5pbnZpbmNpYmxlID0gZmFsc2U7XG4gIH1cblxuICAvLyBwbGF5ZXIgc2hpcCB1bmlxdWUgaGl0Ym94ZXNcbiAgZ2V0SGl0Ym94KCkge1xuICAgIGNvbnN0IGJveDEgPSB7XG4gICAgICB4OiB0aGlzLnBvc2l0aW9uWzBdICsgKHRoaXMud2lkdGggLyAzKSxcbiAgICAgIHk6IHRoaXMucG9zaXRpb25bMV0sXG4gICAgICB3aWR0aDogdGhpcy53aWR0aCAvIDMsXG4gICAgICBoZWlnaHQ6IHRoaXMuaGVpZ2h0XG4gICAgfVxuXG4gICAgY29uc3QgYm94MiA9IHtcbiAgICAgIHg6IHRoaXMucG9zaXRpb25bMF0sXG4gICAgICB5OiB0aGlzLnBvc2l0aW9uWzFdICsgKHRoaXMuaGVpZ2h0ICogLjY1KSxcbiAgICAgIHdpZHRoOiB0aGlzLndpZHRoLFxuICAgICAgaGVpZ2h0OiB0aGlzLmhlaWdodC81XG4gICAgfVxuXG4gICAgcmV0dXJuIFtib3gxLCBib3gyXTtcbiAgfVxuXG4gIC8vIHZlbG9jaXR5IHVwZGF0ZWQgYmFzZWQgb24gcGxheWVyIGNvbnRyb2xsZWQgbW92ZW1lbnRzXG4gIHVwZGF0ZVZlbG9jaXR5KCkge1xuICAgIGxldCBuZXdWZWxvY2l0eSA9IFswLCAwXTtcblxuICAgIC8vIHdoZW4gZGlzYWJsZWQsIHBsYXllciBhdXRvIG1vdmVzIGRvd253YXJkc1xuICAgIGlmICh0aGlzLmRpc2FibGVkKSB7XG4gICAgICBuZXdWZWxvY2l0eVsxXSA9IDI7XG4gICAgfSBlbHNlIGlmICh0aGlzLmdhbWUuZ2FtZVZpZXcubW91c2VGb2xsb3cgJiYgdGhpcy5nYW1lLmdhbWVWaWV3Lm1vdXNlUG9zaXRpb24pIHtcbiAgICAgIC8vIG1vdXNlL3RvdWNoIGNvbnRyb2xsZWQgbW92ZW1lbnQgaGFuZGxpbmdcbiAgICAgIC8vIG1vdmVtZW50IGlzIHNtb290aGVkIG91dCBmb3IgZmluZXIgY29udHJvbHNcbiAgICAgIGNvbnN0IHhEaWZmID0gdGhpcy5nYW1lLmdhbWVWaWV3Lm1vdXNlUG9zaXRpb24ueCAtICh0aGlzLnBvc2l0aW9uWzBdICsgKHRoaXMud2lkdGggLyAyKSk7XG4gICAgICBjb25zdCB5RGlmZiA9IHRoaXMuZ2FtZS5nYW1lVmlldy5tb3VzZVBvc2l0aW9uLnkgLSAodGhpcy5wb3NpdGlvblsxXSArICh0aGlzLmhlaWdodCAvIDIpKTtcbiAgICAgIGNvbnN0IGRlYWR6b25lID0gMjtcblxuICAgICAgaWYgKHhEaWZmID4gZGVhZHpvbmUpIHtcbiAgICAgICAgbmV3VmVsb2NpdHlbMF0gKz0gTWF0aC5taW4odGhpcy5zcGVlZCwgeERpZmYpO1xuICAgICAgfSBlbHNlIGlmICh4RGlmZiA8IC1kZWFkem9uZSkge1xuICAgICAgICBuZXdWZWxvY2l0eVswXSAtPSBNYXRoLm1pbih0aGlzLnNwZWVkLCAteERpZmYpO1xuICAgICAgfVxuXG4gICAgICBpZiAoeURpZmYgPiBkZWFkem9uZSkge1xuICAgICAgICBuZXdWZWxvY2l0eVsxXSArPSBNYXRoLm1pbih0aGlzLnNwZWVkLCB5RGlmZik7XG4gICAgICB9IGVsc2UgaWYgKHlEaWZmIDwgLWRlYWR6b25lKSB7XG4gICAgICAgIG5ld1ZlbG9jaXR5WzFdIC09IE1hdGgubWluKHRoaXMuc3BlZWQsIC15RGlmZik7XG4gICAgICB9XG5cbiAgICAgIGlmIChuZXdWZWxvY2l0eVswXSAmJiBuZXdWZWxvY2l0eVsxXSkge1xuICAgICAgICBjb25zdCBzcGVlZCA9IChNYXRoLmFicyhuZXdWZWxvY2l0eVswXSkgKyBNYXRoLmFicyhuZXdWZWxvY2l0eVsxXSkpIC8gMjtcbiAgICAgICAgbmV3VmVsb2NpdHkgPSB2ZWN0b3JTY2FsZShuZXdWZWxvY2l0eSwgc3BlZWQpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBrZXlib2FyZCBjb250cm9sbGVkIG1vdmVtZW50IGhhbmRsaW5nXG4gICAgICBpZiAodGhpcy5rZXlzUHJlc3NlZC5yaWdodCkgbmV3VmVsb2NpdHlbMF0gKz0gdGhpcy5zcGVlZDtcbiAgICAgIGlmICh0aGlzLmtleXNQcmVzc2VkLmxlZnQpIG5ld1ZlbG9jaXR5WzBdIC09IHRoaXMuc3BlZWQ7XG4gICAgICBpZiAodGhpcy5rZXlzUHJlc3NlZC51cCkgbmV3VmVsb2NpdHlbMV0gLT0gdGhpcy5zcGVlZDtcbiAgICAgIGlmICh0aGlzLmtleXNQcmVzc2VkLmRvd24pIG5ld1ZlbG9jaXR5WzFdICs9IHRoaXMuc3BlZWQ7XG5cbiAgICAgIGlmIChuZXdWZWxvY2l0eVswXSAmJiBuZXdWZWxvY2l0eVsxXSkgbmV3VmVsb2NpdHkgPSB2ZWN0b3JTY2FsZShuZXdWZWxvY2l0eSwgdGhpcy5zcGVlZCk7XG4gICAgfVxuXG4gICAgdGhpcy52ZWxvY2l0eSA9IG5ld1ZlbG9jaXR5O1xuICB9XG5cbiAgLy8gc2hvb3RpbmcgYWxzbyBjb250cm9sbGVkIGJ5IHBsYXllclxuICBzaG9vdFByb2plY3RpbGUoKSB7XG4gICAgaWYgKHRoaXMua2V5c1ByZXNzZWQuc2hvb3QgJiYgIXRoaXMuZGlzYWJsZWQpIHN1cGVyLnNob290UHJvamVjdGlsZSgpO1xuICB9XG5cbiAgLy8gcGxheWVyIG11c3QgYmUgd2l0aGluIGdhbWUgc2NyZWVuIGF0IGFsbCB0aW1lc1xuICBoYW5kbGVCb3VuZHMobmV3UG9zaXRpb24pIHtcbiAgICBpZiAodGhpcy5pblhCb3VuZHMobmV3UG9zaXRpb25bMF0pKSB0aGlzLnBvc2l0aW9uWzBdID0gbmV3UG9zaXRpb25bMF07XG4gICAgaWYgKHRoaXMuaW5ZQm91bmRzKG5ld1Bvc2l0aW9uWzFdKSkgdGhpcy5wb3NpdGlvblsxXSA9IG5ld1Bvc2l0aW9uWzFdO1xuICB9XG5cbiAgLy8gcGxheWVyIGdldHMgMSBzZWMgb2YgaW52aWNpYmlsaXR5IGFmdGVyIHRha2luZyBkYW1hZ2VcbiAgZGFtYWdlVGFrZW4oZGFtYWdlKSB7XG4gICAgaWYgKCF0aGlzLmludmluY2libGUgJiYgdGhpcy5oZWFsdGggPj0gMCkge1xuICAgICAgc3VwZXIuZGFtYWdlVGFrZW4oZGFtYWdlKTtcbiAgICAgIHRoaXMuaW52aW5jaWJsZSA9IHRydWU7XG4gICAgICB0aGlzLmdhbWUuc291bmRzLmFkZChcInBsYXllckh1cnRcIik7XG4gICAgICBuZXcgVGltZXIodGhpcy5nYW1lLCB0aGlzLnJlc2V0SW52aW5jaWJpbGl0eS5iaW5kKHRoaXMpLCAxMDAwKTtcbiAgICB9XG4gIH1cblxuICByZXNldEludmluY2liaWxpdHkoKSB7XG4gICAgdGhpcy5pbnZpbmNpYmxlID0gZmFsc2U7XG4gIH1cblxuICAvLyBwbGF5ZXIgdW5pcXVlIGRlYXRoIGFuaW1hdGlvbiwgYW5kIGFjdGl2YXRlcyBnYW1lIG92ZXIgbG9naWNcbiAgcmVtb3ZlKCkge1xuICAgIGlmICghdGhpcy5kaXNhYmxlZCkgeyBcbiAgICAgIHRoaXMuZGlzYWJsZWQgPSB0cnVlO1xuXG4gICAgICBuZXcgVGltZXIodGhpcy5nYW1lLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHBvc1ggPSB0aGlzLnBvc2l0aW9uWzBdIC0gNDA7XG4gICAgICAgIGNvbnN0IHBvc1kgPSB0aGlzLnBvc2l0aW9uWzFdIC0gMjA7XG4gICAgICAgIG5ldyBFeHBsb3Npb24odGhpcy5nYW1lLCAxMDAsIFtwb3NYLCBwb3NZXSwgXCJtYWpvclwiLCBbMCwgMF0pO1xuICAgICAgICBzdXBlci5yZW1vdmUoKTtcbiAgICAgICAgdGhpcy5nYW1lLnNvdW5kcy5wbGF5TWFqb3JTb3VuZChcInBsYXllckRlYXRoXCIpO1xuICAgICAgICBuZXcgVGltZXIodGhpcy5nYW1lLCB0aGlzLmdhbWUuc2V0R2FtZU92ZXIuYmluZCh0aGlzLmdhbWUpLCAzMDAwKTtcbiAgICAgIH0sIDEwMDApXG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFBsYXllclNoaXA7Il0sIm5hbWVzIjpbIlNoaXAiLCJFeHBsb3Npb24iLCJUaW1lciIsInZlY3RvclNjYWxlIiwiUGxheWVyU2hpcCIsIlNQRUVEIiwiTUFYX0hFQUxUSCIsImNvbnN0cnVjdG9yIiwiZ2FtZSIsImltYWdlIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic3JjIiwiaGVpZ2h0Iiwid2lkdGgiLCJvYmpBcmdzIiwicG9zaXRpb24iLCJNYXRoIiwiZmxvb3IiLCJjYW52YXNXaWR0aCIsImNhbnZhc0hlaWdodCIsInZlbG9jaXR5Iiwic3BlZWQiLCJoZWFsdGgiLCJ0eXBlIiwicHJvamVjdGlsZUFyZ3MiLCJvcmlnaW4iLCJwcm9qZWN0aWxlU291bmQiLCJwYXR0ZXJuQXJncyIsInBvc2l0aW9uRGVsdGFzIiwiYmF0Y2hGaXJlTnVtIiwiYmF0Y2hGaXJlSW50ZXJ2YWwiLCJjb29sZG93biIsIm9uQ29vbGRvd24iLCJ0aW1lciIsInByb2plY3RpbGVBcmdJbmRleCIsImtleXNQcmVzc2VkIiwidXAiLCJkb3duIiwibGVmdCIsInJpZ2h0Iiwic2hvb3QiLCJkaXNhYmxlZCIsImludmluY2libGUiLCJnZXRIaXRib3giLCJib3gxIiwieCIsInkiLCJib3gyIiwidXBkYXRlVmVsb2NpdHkiLCJuZXdWZWxvY2l0eSIsImdhbWVWaWV3IiwibW91c2VGb2xsb3ciLCJtb3VzZVBvc2l0aW9uIiwieERpZmYiLCJ5RGlmZiIsImRlYWR6b25lIiwibWluIiwiYWJzIiwic2hvb3RQcm9qZWN0aWxlIiwiaGFuZGxlQm91bmRzIiwibmV3UG9zaXRpb24iLCJpblhCb3VuZHMiLCJpbllCb3VuZHMiLCJkYW1hZ2VUYWtlbiIsImRhbWFnZSIsInNvdW5kcyIsImFkZCIsInJlc2V0SW52aW5jaWJpbGl0eSIsImJpbmQiLCJyZW1vdmUiLCJwb3NYIiwicG9zWSIsInBsYXlNYWpvclNvdW5kIiwic2V0R2FtZU92ZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/player_ship.js\n");

/***/ }),

/***/ "./src/scripts/projectile.js":
/*!***********************************!*\
  !*** ./src/scripts/projectile.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _moving_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./moving_object */ \"./src/scripts/moving_object.js\");\n// Top level class for all projectiles shot from ships\n\n\nclass Projectile extends _moving_object__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  // args contains MovingObject args and an origin\n  constructor(args) {\n    // Projectile health determines damage dealt\n    args.objArgs.type = \"projectiles\";\n    super(args.objArgs);\n    this.origin = args.origin; // a string of either 'player' or 'enemy'\n  }\n\n  // projectiles are also removed when they collide with ships, handled by Ship objects\n  handleBounds(newPosition) {\n    if (!this.inBounds(newPosition)) {\n      super.remove();\n    } else {\n      this.position = newPosition;\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Projectile);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9wcm9qZWN0aWxlLmpzIiwibWFwcGluZ3MiOiI7O0FBQUE7O0FBRTJDO0FBRTNDLE1BQU1DLFVBQVUsU0FBU0Qsc0RBQVksQ0FBQztFQUNwQztFQUNBRSxXQUFXQSxDQUFDQyxJQUFJLEVBQUU7SUFDaEI7SUFDQUEsSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksR0FBRyxhQUFhO0lBQ2pDLEtBQUssQ0FBQ0YsSUFBSSxDQUFDQyxPQUFPLENBQUM7SUFDbkIsSUFBSSxDQUFDRSxNQUFNLEdBQUdILElBQUksQ0FBQ0csTUFBTSxDQUFDLENBQUU7RUFDOUI7O0VBRUE7RUFDQUMsWUFBWUEsQ0FBQ0MsV0FBVyxFQUFFO0lBQ3hCLElBQUksQ0FBQyxJQUFJLENBQUNDLFFBQVEsQ0FBQ0QsV0FBVyxDQUFDLEVBQUU7TUFDL0IsS0FBSyxDQUFDRSxNQUFNLENBQUMsQ0FBQztJQUNoQixDQUFDLE1BQU07TUFDTCxJQUFJLENBQUNDLFFBQVEsR0FBR0gsV0FBVztJQUM3QjtFQUNGO0FBQ0Y7QUFFQSwrREFBZVAsVUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL2phdmFzY3JpcHQtcHJvamVjdC8uL3NyYy9zY3JpcHRzL3Byb2plY3RpbGUuanM/ZmY1NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUb3AgbGV2ZWwgY2xhc3MgZm9yIGFsbCBwcm9qZWN0aWxlcyBzaG90IGZyb20gc2hpcHNcblxuaW1wb3J0IE1vdmluZ09iamVjdCBmcm9tIFwiLi9tb3Zpbmdfb2JqZWN0XCI7XG5cbmNsYXNzIFByb2plY3RpbGUgZXh0ZW5kcyBNb3ZpbmdPYmplY3Qge1xuICAvLyBhcmdzIGNvbnRhaW5zIE1vdmluZ09iamVjdCBhcmdzIGFuZCBhbiBvcmlnaW5cbiAgY29uc3RydWN0b3IoYXJncykge1xuICAgIC8vIFByb2plY3RpbGUgaGVhbHRoIGRldGVybWluZXMgZGFtYWdlIGRlYWx0XG4gICAgYXJncy5vYmpBcmdzLnR5cGUgPSBcInByb2plY3RpbGVzXCI7XG4gICAgc3VwZXIoYXJncy5vYmpBcmdzKTtcbiAgICB0aGlzLm9yaWdpbiA9IGFyZ3Mub3JpZ2luOyAgLy8gYSBzdHJpbmcgb2YgZWl0aGVyICdwbGF5ZXInIG9yICdlbmVteSdcbiAgfVxuXG4gIC8vIHByb2plY3RpbGVzIGFyZSBhbHNvIHJlbW92ZWQgd2hlbiB0aGV5IGNvbGxpZGUgd2l0aCBzaGlwcywgaGFuZGxlZCBieSBTaGlwIG9iamVjdHNcbiAgaGFuZGxlQm91bmRzKG5ld1Bvc2l0aW9uKSB7XG4gICAgaWYgKCF0aGlzLmluQm91bmRzKG5ld1Bvc2l0aW9uKSkge1xuICAgICAgc3VwZXIucmVtb3ZlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucG9zaXRpb24gPSBuZXdQb3NpdGlvblxuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBQcm9qZWN0aWxlOyJdLCJuYW1lcyI6WyJNb3ZpbmdPYmplY3QiLCJQcm9qZWN0aWxlIiwiY29uc3RydWN0b3IiLCJhcmdzIiwib2JqQXJncyIsInR5cGUiLCJvcmlnaW4iLCJoYW5kbGVCb3VuZHMiLCJuZXdQb3NpdGlvbiIsImluQm91bmRzIiwicmVtb3ZlIiwicG9zaXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/projectile.js\n");

/***/ }),

/***/ "./src/scripts/ship.js":
/*!*****************************!*\
  !*** ./src/scripts/ship.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _moving_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./moving_object */ \"./src/scripts/moving_object.js\");\n/* harmony import */ var _projectile__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./projectile */ \"./src/scripts/projectile.js\");\n/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./timer */ \"./src/scripts/timer.js\");\n// Ship is the top parent class for player, enemy, and boss ships\n\n\n\n\nclass Ship extends _moving_object__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  // takes in constructor argument objects for MovingObject and Projectile\n  // and takes in an array of shooting pattern objects\n  constructor(objArgs, projectileArgs, patternArgs) {\n    super(objArgs);\n    this.projectileArgs = projectileArgs;\n    this.patternArgs = patternArgs;\n  }\n\n  // ships can have multiple projectile patterns and possible batch firing\n  // each pattern has it's own cooldown\n  shootProjectile() {\n    this.patternArgs.forEach((pattern, idx) => {\n      // fire pattern if off cooldown and ship in game bounds\n      if (!pattern.onCooldown && this.inBounds(this.position)) {\n        // batch firing\n        for (let i = 0; i < pattern.batchFireNum; i++) {\n          new _timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, () => {\n            // only fire if ship still alive when timer callback activates\n            if (this.health > 0) {\n              // create new Projectile at each position in the pattern\n              pattern.positionDeltas.forEach(delta => {\n                const [x, y] = this.position;\n                const [dx, dy] = delta;\n                const startPosition = [x + dx, y + dy];\n                const projArgs = this.projectileArgs[pattern.projectileArgIndex];\n                projArgs.objArgs.position = startPosition;\n                new _projectile__WEBPACK_IMPORTED_MODULE_1__[\"default\"](projArgs);\n              });\n            }\n          }, pattern.batchFireInterval * i);\n        }\n\n        // play projectile sound\n        const projSound = this.projectileArgs[pattern.projectileArgIndex].projectileSound;\n        this.playShootSound(projSound);\n\n        // set cooldown and start timer to reset it\n        pattern.onCooldown = true;\n        const batchCooldownOffset = pattern.batchFireInterval * pattern.batchFireNum;\n        pattern.timer = new _timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.game, this.resetCooldown.bind(this, idx), pattern.cooldown + batchCooldownOffset);\n      }\n    });\n  }\n\n  // projectileSound is a string of either 'playerProjectile', 'bossProjectile', or 'enemyProjectile'\n  playShootSound(projectileSound) {\n    this.game.sounds.add(projectileSound);\n  }\n\n  // takes in an index for the shooting patterns array\n  resetCooldown(index) {\n    this.patternArgs[index].onCooldown = false;\n    this.patternArgs[index].timer = null;\n  }\n  damageTaken(damage) {\n    this.health -= damage;\n    if (this.health <= 0) this.remove();\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Ship);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUN0QztFQUVBTyxXQUFXQSxDQUFDQyxNQUFNLEVBQUU7SUFDbEIsSUFBSSxDQUFDdkIsTUFBTSxJQUFJdUIsTUFBTTtJQUNyQixJQUFJLElBQUksQ0FBQ3ZCLE1BQU0sSUFBSSxDQUFDLEVBQUUsSUFBSSxDQUFDd0IsTUFBTSxDQUFDLENBQUM7RUFDckM7QUFDRjtBQUVBLCtEQUFldkMsSUFBSSIsInNvdXJjZXMiOlsid2VicGFjazovL2phdmFzY3JpcHQtcHJvamVjdC8uL3NyYy9zY3JpcHRzL3NoaXAuanM/NTUwNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTaGlwIGlzIHRoZSB0b3AgcGFyZW50IGNsYXNzIGZvciBwbGF5ZXIsIGVuZW15LCBhbmQgYm9zcyBzaGlwc1xuXG5pbXBvcnQgTW92aW5nT2JqZWN0IGZyb20gXCIuL21vdmluZ19vYmplY3RcIjtcbmltcG9ydCBQcm9qZWN0aWxlIGZyb20gXCIuL3Byb2plY3RpbGVcIjtcbmltcG9ydCBUaW1lciBmcm9tIFwiLi90aW1lclwiO1xuXG5jbGFzcyBTaGlwIGV4dGVuZHMgTW92aW5nT2JqZWN0IHtcbiAgLy8gdGFrZXMgaW4gY29uc3RydWN0b3IgYXJndW1lbnQgb2JqZWN0cyBmb3IgTW92aW5nT2JqZWN0IGFuZCBQcm9qZWN0aWxlXG4gIC8vIGFuZCB0YWtlcyBpbiBhbiBhcnJheSBvZiBzaG9vdGluZyBwYXR0ZXJuIG9iamVjdHNcbiAgY29uc3RydWN0b3Iob2JqQXJncywgcHJvamVjdGlsZUFyZ3MsIHBhdHRlcm5BcmdzKSB7XG4gICAgc3VwZXIob2JqQXJncyk7XG4gICAgdGhpcy5wcm9qZWN0aWxlQXJncyA9IHByb2plY3RpbGVBcmdzO1xuICAgIHRoaXMucGF0dGVybkFyZ3MgPSBwYXR0ZXJuQXJncztcbiAgfVxuXG4gIC8vIHNoaXBzIGNhbiBoYXZlIG11bHRpcGxlIHByb2plY3RpbGUgcGF0dGVybnMgYW5kIHBvc3NpYmxlIGJhdGNoIGZpcmluZ1xuICAvLyBlYWNoIHBhdHRlcm4gaGFzIGl0J3Mgb3duIGNvb2xkb3duXG4gIHNob290UHJvamVjdGlsZSgpIHtcbiAgICB0aGlzLnBhdHRlcm5BcmdzLmZvckVhY2goKHBhdHRlcm4sIGlkeCkgPT4ge1xuICAgICAgLy8gZmlyZSBwYXR0ZXJuIGlmIG9mZiBjb29sZG93biBhbmQgc2hpcCBpbiBnYW1lIGJvdW5kc1xuICAgICAgaWYgKCFwYXR0ZXJuLm9uQ29vbGRvd24gJiYgdGhpcy5pbkJvdW5kcyh0aGlzLnBvc2l0aW9uKSkge1xuICAgICAgICAvLyBiYXRjaCBmaXJpbmdcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwYXR0ZXJuLmJhdGNoRmlyZU51bTsgaSArKykge1xuICAgICAgICAgIG5ldyBUaW1lcih0aGlzLmdhbWUsICgpID0+IHtcbiAgICAgICAgICAgIC8vIG9ubHkgZmlyZSBpZiBzaGlwIHN0aWxsIGFsaXZlIHdoZW4gdGltZXIgY2FsbGJhY2sgYWN0aXZhdGVzXG4gICAgICAgICAgICBpZiAodGhpcy5oZWFsdGggPiAwKSB7XG4gICAgICAgICAgICAgIC8vIGNyZWF0ZSBuZXcgUHJvamVjdGlsZSBhdCBlYWNoIHBvc2l0aW9uIGluIHRoZSBwYXR0ZXJuXG4gICAgICAgICAgICAgIHBhdHRlcm4ucG9zaXRpb25EZWx0YXMuZm9yRWFjaChkZWx0YSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgW3gsIHldID0gdGhpcy5wb3NpdGlvbjtcbiAgICAgICAgICAgICAgICBjb25zdCBbZHgsIGR5XSA9IGRlbHRhO1xuICAgICAgICAgICAgICAgIGNvbnN0IHN0YXJ0UG9zaXRpb24gPSBbeCArIGR4LCB5ICsgZHldO1xuXG4gICAgICAgICAgICAgICAgY29uc3QgcHJvakFyZ3MgPSB0aGlzLnByb2plY3RpbGVBcmdzW3BhdHRlcm4ucHJvamVjdGlsZUFyZ0luZGV4XTtcbiAgICAgICAgICAgICAgICBwcm9qQXJncy5vYmpBcmdzLnBvc2l0aW9uID0gc3RhcnRQb3NpdGlvbjtcblxuICAgICAgICAgICAgICAgIG5ldyBQcm9qZWN0aWxlKHByb2pBcmdzKTtcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LCBwYXR0ZXJuLmJhdGNoRmlyZUludGVydmFsICogaSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBwbGF5IHByb2plY3RpbGUgc291bmRcbiAgICAgICAgY29uc3QgcHJvalNvdW5kID0gdGhpcy5wcm9qZWN0aWxlQXJnc1twYXR0ZXJuLnByb2plY3RpbGVBcmdJbmRleF0ucHJvamVjdGlsZVNvdW5kO1xuICAgICAgICB0aGlzLnBsYXlTaG9vdFNvdW5kKHByb2pTb3VuZCk7XG4gICAgICAgIFxuICAgICAgICAvLyBzZXQgY29vbGRvd24gYW5kIHN0YXJ0IHRpbWVyIHRvIHJlc2V0IGl0XG4gICAgICAgIHBhdHRlcm4ub25Db29sZG93biA9IHRydWU7XG4gICAgICAgIGNvbnN0IGJhdGNoQ29vbGRvd25PZmZzZXQgPSBwYXR0ZXJuLmJhdGNoRmlyZUludGVydmFsICogcGF0dGVybi5iYXRjaEZpcmVOdW07XG4gICAgICAgIHBhdHRlcm4udGltZXIgPSBuZXcgVGltZXIodGhpcy5nYW1lLCB0aGlzLnJlc2V0Q29vbGRvd24uYmluZCh0aGlzLCBpZHgpLCAocGF0dGVybi5jb29sZG93biArIGJhdGNoQ29vbGRvd25PZmZzZXQpKTtcbiAgICAgIH1cbiAgICB9KVxuICB9XG5cbiAgLy8gcHJvamVjdGlsZVNvdW5kIGlzIGEgc3RyaW5nIG9mIGVpdGhlciAncGxheWVyUHJvamVjdGlsZScsICdib3NzUHJvamVjdGlsZScsIG9yICdlbmVteVByb2plY3RpbGUnXG4gIHBsYXlTaG9vdFNvdW5kKHByb2plY3RpbGVTb3VuZCkge1xuICAgIHRoaXMuZ2FtZS5zb3VuZHMuYWRkKHByb2plY3RpbGVTb3VuZCk7XG4gIH1cblxuICAvLyB0YWtlcyBpbiBhbiBpbmRleCBmb3IgdGhlIHNob290aW5nIHBhdHRlcm5zIGFycmF5XG4gIHJlc2V0Q29vbGRvd24oaW5kZXgpIHtcbiAgICB0aGlzLnBhdHRlcm5BcmdzW2luZGV4XS5vbkNvb2xkb3duID0gZmFsc2U7XG4gICAgdGhpcy5wYXR0ZXJuQXJnc1tpbmRleF0udGltZXIgPSBudWxsO1xuICB9XG5cbiAgZGFtYWdlVGFrZW4oZGFtYWdlKSB7XG4gICAgdGhpcy5oZWFsdGggLT0gZGFtYWdlO1xuICAgIGlmICh0aGlzLmhlYWx0aCA8PSAwKSB0aGlzLnJlbW92ZSgpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFNoaXA7Il0sIm5hbWVzIjpbIk1vdmluZ09iamVjdCIsIlByb2plY3RpbGUiLCJUaW1lciIsIlNoaXAiLCJjb25zdHJ1Y3RvciIsIm9iakFyZ3MiLCJwcm9qZWN0aWxlQXJncyIsInBhdHRlcm5BcmdzIiwic2hvb3RQcm9qZWN0aWxlIiwiZm9yRWFjaCIsInBhdHRlcm4iLCJpZHgiLCJvbkNvb2xkb3duIiwiaW5Cb3VuZHMiLCJwb3NpdGlvbiIsImkiLCJiYXRjaEZpcmVOdW0iLCJnYW1lIiwiaGVhbHRoIiwicG9zaXRpb25EZWx0YXMiLCJkZWx0YSIsIngiLCJ5IiwiZHgiLCJkeSIsInN0YXJ0UG9zaXRpb24iLCJwcm9qQXJncyIsInByb2plY3RpbGVBcmdJbmRleCIsImJhdGNoRmlyZUludGVydmFsIiwicHJvalNvdW5kIiwicHJvamVjdGlsZVNvdW5kIiwicGxheVNob290U291bmQiLCJiYXRjaENvb2xkb3duT2Zmc2V0IiwidGltZXIiLCJyZXNldENvb2xkb3duIiwiYmluZCIsImNvb2xkb3duIiwic291bmRzIiwiYWRkIiwiaW5kZXgiLCJkYW1hZ2VUYWtlbiIsImRhbWFnZSIsInJlbW92ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/ship.js\n");

/***/ }),

/***/ "./src/scripts/sound.js":
/*!******************************!*\
  !*** ./src/scripts/sound.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// Sound class creates and handles all game sounds\n\nclass Sound {\n  constructor(game) {\n    this.game = game;\n    const AudioContext = window.AudioContext || window.webkitAudioContext;\n    this.audioCtx = new AudioContext();\n    const soundUrls = {\n      // background musics\n      waveBGM: \"src/assets/sounds/wave_bgm.mp3\",\n      bossIncomingBGM: \"src/assets/sounds/boss_incoming_bgm.mp3\",\n      bossBGM: \"src/assets/sounds/boss_bgm.mp3\",\n      // major sounds\n      playerDeath: \"src/assets/sounds/player_death.wav\",\n      bossDeath: \"src/assets/sounds/boss_death.mp3\",\n      win: \"src/assets/sounds/win.mp3\",\n      gameOver: \"src/assets/sounds/game_over.mp3\",\n      // normal sounds\n      playerHurt: \"src/assets/sounds/player_hurt.wav\",\n      defaultProjectile: \"src/assets/sounds/default_laser.wav\",\n      playerProjectile: \"src/assets/sounds/player_laser.wav\",\n      enemyProjectile: \"src/assets/sounds/enemy_laser.wav\",\n      bossProjectile: \"src/assets/sounds/boss_projectile.wav\",\n      explosion: \"src/assets/sounds/explosion.wav\"\n    };\n\n    // create audio buffers from each sound file and save as a Sound class property\n    (async () => {\n      for (const key in soundUrls) {\n        const url = soundUrls[key];\n        const response = await fetch(url);\n        const arrayBuffer = await response.arrayBuffer();\n        const audioBuffer = await this.audioCtx.decodeAudioData(arrayBuffer);\n        this[key] = audioBuffer;\n      }\n    })();\n    this.currentBGM = \"waveBGM\";\n    this.bgm = null;\n    this.bgmPlaying = false;\n    this.soundId = 0;\n    this.currentSounds = {};\n    this.toggle = false;\n    this.soundOnElement = document.getElementById(\"sound-on\");\n    this.soundOffElement = document.getElementById(\"sound-off\");\n    this.soundTextElement = document.getElementById(\"sound-text\");\n    this.bindToggleListener();\n  }\n\n  // switching the background music, and play on loop\n  // also used to play same background music again after stopping\n  switchBGM(key) {\n    this.currentBGM = key;\n    if (!this.toggle) return;\n    this.stopBGM();\n    this.bgm = this.audioCtx.createBufferSource();\n    this.bgm.buffer = this[key];\n    this.bgm.connect(this.audioCtx.destination);\n    this.bgm.loop = true;\n    this.bgm.start(0);\n    this.bgmPlaying = true;\n  }\n  stopBGM() {\n    if (!this.bgmPlaying) return;\n    this.bgm.stop();\n    // this.bgm.disconnect(this.audioCtx.destination);\n    this.bgm = null;\n    this.bgmPlaying = false;\n  }\n\n  // major sounds will stop background music before playing\n  playMajorSound(key) {\n    if (!this.toggle) return;\n    this.stopBGM();\n    this.add(key);\n  }\n\n  // all currently playing normal sounds are kept track of with ids in this.currentSounds\n  // deletes itself from this.currentSounds after finished playing\n  // to be called in other classes as needed\n  add(key) {\n    if (!this.toggle) return;\n    const newAudio = this.audioCtx.createBufferSource();\n    newAudio.buffer = this[key];\n    const newAudioVolume = this.audioCtx.createGain();\n    newAudio.connect(newAudioVolume).connect(this.audioCtx.destination);\n    if (key === \"enemyProjectile\") newAudioVolume.gain.value = 0.04;else if (key === \"playerDeath\") newAudioVolume.gain.value = 0.2;else if (key === \"win\") newAudioVolume.gain.value = 0.3;else newAudioVolume.gain.value = 1.0;\n    const id = this.soundId++;\n    const audioObject = {\n      audio: newAudio,\n      volume: newAudioVolume\n    };\n    this.currentSounds[id] = audioObject;\n    newAudio.onended = () => {\n      if (this.currentSounds[id]) {\n        // newAudioVolume.disconnect(this.audioCtx.destination);\n        delete this.currentSounds[id];\n      }\n    };\n    newAudio.start(0);\n  }\n  clearCurrentSounds() {\n    for (const id in this.currentSounds) {\n      const soundObject = this.currentSounds[id];\n      soundObject.audio.stop();\n      // soundObject.volume.disconnect(this.audioCtx.destination);\n      soundObject.audio = null;\n      soundObject.volume = null;\n      delete this.currentSounds[id];\n    }\n  }\n\n  // sound toggling\n  toggleOff() {\n    if (this.audioCtx.state !== \"suspended\") this.audioCtx.suspend();\n    this.toggle = false;\n    this.stopBGM();\n    this.clearCurrentSounds();\n  }\n  toggleOn() {\n    if (this.audioCtx.state === \"suspended\") this.audioCtx.resume();\n    this.toggle = true;\n    if (!this.game.startScreen && !this.game.gameOver && !this.game.win) {\n      this.switchBGM(this.currentBGM);\n    }\n  }\n  reset() {\n    this.switchBGM(\"waveBGM\");\n    this.clearCurrentSounds();\n  }\n  bindToggleListener() {\n    const soundContainer = document.getElementById(\"sound-icons-container\");\n    soundContainer.addEventListener(\"click\", this.handleSoundToggle.bind(this));\n  }\n  handleSoundToggle() {\n    if (this.toggle) {\n      this.toggleOff();\n      this.soundOnElement.style.display = 'none';\n      this.soundOffElement.style.display = 'block';\n      this.soundTextElement.innerHTML = \"muted\";\n    } else {\n      this.toggleOn();\n      this.soundOnElement.style.display = 'block';\n      this.soundOffElement.style.display = 'none';\n      this.soundTextElement.innerHTML = \"sound on\";\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Sound);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/sound.js\n");

/***/ }),

/***/ "./src/scripts/timer.js":
/*!******************************!*\
  !*** ./src/scripts/timer.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// Timer class wraps setTimeouts with added pause and resume functionality\n\nclass Timer {\n  // callback function to be called after the delay expires\n  // delay is in milliseconds\n  constructor(game, callback, delay) {\n    // all Timers are kept tracked of in Game.timers\n    this.game = game;\n    this.id = this.game.idCounter++;\n    this.game.timers[this.id] = this;\n\n    //  Timers will also delete themselves after the callback is played\n    this.timerCallback = () => {\n      callback();\n      delete this.game.timers[this.id];\n    };\n    this.startTime = Date.now();\n    this.delay = delay;\n    this.timeoutId = setTimeout(this.timerCallback.bind(this), this.delay);\n  }\n\n  // pause and resume simply clear and create setTimeouts with new remaining delays\n  pause() {\n    clearTimeout(this.timeoutId);\n    this.delay -= Date.now() - this.startTime;\n  }\n  resume() {\n    this.startTime = Date.now();\n    this.timeoutId = setTimeout(this.timerCallback.bind(this), this.delay);\n  }\n  clear() {\n    clearTimeout(this.timeoutId);\n    delete this.game.timers[this.id];\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Timer);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy90aW1lci5qcyIsIm1hcHBpbmdzIjoiO0FBQUE7O0FBRUEsTUFBTUEsS0FBSyxDQUFDO0VBQ1Y7RUFDQTtFQUNBQyxXQUFXQSxDQUFDQyxJQUFJLEVBQUVDLFFBQVEsRUFBRUMsS0FBSyxFQUFFO0lBQ2pDO0lBQ0EsSUFBSSxDQUFDRixJQUFJLEdBQUdBLElBQUk7SUFDaEIsSUFBSSxDQUFDRyxFQUFFLEdBQUcsSUFBSSxDQUFDSCxJQUFJLENBQUNJLFNBQVMsRUFBRTtJQUMvQixJQUFJLENBQUNKLElBQUksQ0FBQ0ssTUFBTSxDQUFDLElBQUksQ0FBQ0YsRUFBRSxDQUFDLEdBQUcsSUFBSTs7SUFFaEM7SUFDQSxJQUFJLENBQUNHLGFBQWEsR0FBRyxNQUFNO01BQ3pCTCxRQUFRLENBQUMsQ0FBQztNQUNWLE9BQU8sSUFBSSxDQUFDRCxJQUFJLENBQUNLLE1BQU0sQ0FBQyxJQUFJLENBQUNGLEVBQUUsQ0FBQztJQUNsQyxDQUFDO0lBRUQsSUFBSSxDQUFDSSxTQUFTLEdBQUdDLElBQUksQ0FBQ0MsR0FBRyxDQUFDLENBQUM7SUFDM0IsSUFBSSxDQUFDUCxLQUFLLEdBQUdBLEtBQUs7SUFDbEIsSUFBSSxDQUFDUSxTQUFTLEdBQUdDLFVBQVUsQ0FBQyxJQUFJLENBQUNMLGFBQWEsQ0FBQ00sSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLElBQUksQ0FBQ1YsS0FBSyxDQUFDO0VBQ3hFOztFQUVBO0VBQ0FXLEtBQUtBLENBQUEsRUFBRztJQUNOQyxZQUFZLENBQUMsSUFBSSxDQUFDSixTQUFTLENBQUM7SUFDNUIsSUFBSSxDQUFDUixLQUFLLElBQUlNLElBQUksQ0FBQ0MsR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUNGLFNBQVM7RUFDM0M7RUFFQVEsTUFBTUEsQ0FBQSxFQUFHO0lBQ1AsSUFBSSxDQUFDUixTQUFTLEdBQUdDLElBQUksQ0FBQ0MsR0FBRyxDQUFDLENBQUM7SUFDM0IsSUFBSSxDQUFDQyxTQUFTLEdBQUdDLFVBQVUsQ0FBQyxJQUFJLENBQUNMLGFBQWEsQ0FBQ00sSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLElBQUksQ0FBQ1YsS0FBSyxDQUFDO0VBQ3hFO0VBRUFjLEtBQUtBLENBQUEsRUFBRztJQUNORixZQUFZLENBQUMsSUFBSSxDQUFDSixTQUFTLENBQUM7SUFDNUIsT0FBTyxJQUFJLENBQUNWLElBQUksQ0FBQ0ssTUFBTSxDQUFDLElBQUksQ0FBQ0YsRUFBRSxDQUFDO0VBQ2xDO0FBQ0Y7QUFFQSwrREFBZUwsS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL2phdmFzY3JpcHQtcHJvamVjdC8uL3NyYy9zY3JpcHRzL3RpbWVyLmpzPzE1YTciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGltZXIgY2xhc3Mgd3JhcHMgc2V0VGltZW91dHMgd2l0aCBhZGRlZCBwYXVzZSBhbmQgcmVzdW1lIGZ1bmN0aW9uYWxpdHlcblxuY2xhc3MgVGltZXIge1xuICAvLyBjYWxsYmFjayBmdW5jdGlvbiB0byBiZSBjYWxsZWQgYWZ0ZXIgdGhlIGRlbGF5IGV4cGlyZXNcbiAgLy8gZGVsYXkgaXMgaW4gbWlsbGlzZWNvbmRzXG4gIGNvbnN0cnVjdG9yKGdhbWUsIGNhbGxiYWNrLCBkZWxheSkge1xuICAgIC8vIGFsbCBUaW1lcnMgYXJlIGtlcHQgdHJhY2tlZCBvZiBpbiBHYW1lLnRpbWVyc1xuICAgIHRoaXMuZ2FtZSA9IGdhbWU7XG4gICAgdGhpcy5pZCA9IHRoaXMuZ2FtZS5pZENvdW50ZXIrKztcbiAgICB0aGlzLmdhbWUudGltZXJzW3RoaXMuaWRdID0gdGhpcztcblxuICAgIC8vICBUaW1lcnMgd2lsbCBhbHNvIGRlbGV0ZSB0aGVtc2VsdmVzIGFmdGVyIHRoZSBjYWxsYmFjayBpcyBwbGF5ZWRcbiAgICB0aGlzLnRpbWVyQ2FsbGJhY2sgPSAoKSA9PiB7XG4gICAgICBjYWxsYmFjaygpO1xuICAgICAgZGVsZXRlIHRoaXMuZ2FtZS50aW1lcnNbdGhpcy5pZF07XG4gICAgfVxuXG4gICAgdGhpcy5zdGFydFRpbWUgPSBEYXRlLm5vdygpO1xuICAgIHRoaXMuZGVsYXkgPSBkZWxheTtcbiAgICB0aGlzLnRpbWVvdXRJZCA9IHNldFRpbWVvdXQodGhpcy50aW1lckNhbGxiYWNrLmJpbmQodGhpcyksIHRoaXMuZGVsYXkpO1xuICB9XG5cbiAgLy8gcGF1c2UgYW5kIHJlc3VtZSBzaW1wbHkgY2xlYXIgYW5kIGNyZWF0ZSBzZXRUaW1lb3V0cyB3aXRoIG5ldyByZW1haW5pbmcgZGVsYXlzXG4gIHBhdXNlKCkge1xuICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVvdXRJZCk7XG4gICAgdGhpcy5kZWxheSAtPSBEYXRlLm5vdygpIC0gdGhpcy5zdGFydFRpbWU7XG4gIH1cblxuICByZXN1bWUoKSB7XG4gICAgdGhpcy5zdGFydFRpbWUgPSBEYXRlLm5vdygpO1xuICAgIHRoaXMudGltZW91dElkID0gc2V0VGltZW91dCh0aGlzLnRpbWVyQ2FsbGJhY2suYmluZCh0aGlzKSwgdGhpcy5kZWxheSlcbiAgfVxuXG4gIGNsZWFyKCkge1xuICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVvdXRJZCk7XG4gICAgZGVsZXRlIHRoaXMuZ2FtZS50aW1lcnNbdGhpcy5pZF07XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgVGltZXI7Il0sIm5hbWVzIjpbIlRpbWVyIiwiY29uc3RydWN0b3IiLCJnYW1lIiwiY2FsbGJhY2siLCJkZWxheSIsImlkIiwiaWRDb3VudGVyIiwidGltZXJzIiwidGltZXJDYWxsYmFjayIsInN0YXJ0VGltZSIsIkRhdGUiLCJub3ciLCJ0aW1lb3V0SWQiLCJzZXRUaW1lb3V0IiwiYmluZCIsInBhdXNlIiwiY2xlYXJUaW1lb3V0IiwicmVzdW1lIiwiY2xlYXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/timer.js\n");

/***/ }),

/***/ "./src/scripts/utils.js":
/*!******************************!*\
  !*** ./src/scripts/utils.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   rectangleCollision: function() { return /* binding */ rectangleCollision; },\n/* harmony export */   vectorScale: function() { return /* binding */ vectorScale; }\n/* harmony export */ });\n// vector and collision math related helper functions go here\n\n// rectangle to rectangle collision \n// takes in 2 box objects that have x/y positions, width, and height\nfunction rectangleCollision(box1, box2) {\n  return box1.x < box2.x + box2.width && box1.x + box1.width > box2.x && box1.y < box2.y + box2.height && box1.height + box1.y > box2.y;\n}\n\n// angled rectangle collision (seperate axis theorem)\n\n// rectangle to circle collision\n\n// circle to circle collision\n\n// vector scaling calculation\nfunction vectorScale(vector, newMagnitude) {\n  const magnitude = Math.sqrt(vector[0] ** 2 + vector[1] ** 2);\n  const scale = newMagnitude / magnitude;\n  return [vector[0] * scale, vector[1] * scale];\n}\n\n// vector calculation between two points\n\n// new angle calculation//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOztBQUVBO0FBQ0E7QUFDTyxTQUFTQSxrQkFBa0JBLENBQUNDLElBQUksRUFBRUMsSUFBSSxFQUFFO0VBQzdDLE9BQ0VELElBQUksQ0FBQ0UsQ0FBQyxHQUFHRCxJQUFJLENBQUNDLENBQUMsR0FBR0QsSUFBSSxDQUFDRSxLQUFLLElBQzVCSCxJQUFJLENBQUNFLENBQUMsR0FBR0YsSUFBSSxDQUFDRyxLQUFLLEdBQUdGLElBQUksQ0FBQ0MsQ0FBQyxJQUM1QkYsSUFBSSxDQUFDSSxDQUFDLEdBQUdILElBQUksQ0FBQ0csQ0FBQyxHQUFHSCxJQUFJLENBQUNJLE1BQU0sSUFDN0JMLElBQUksQ0FBQ0ssTUFBTSxHQUFHTCxJQUFJLENBQUNJLENBQUMsR0FBR0gsSUFBSSxDQUFDRyxDQUFDO0FBRWpDOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ08sU0FBU0UsV0FBV0EsQ0FBQ0MsTUFBTSxFQUFFQyxZQUFZLEVBQUU7RUFDaEQsTUFBTUMsU0FBUyxHQUFHQyxJQUFJLENBQUNDLElBQUksQ0FBQ0osTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFFLENBQUMsR0FBR0EsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFFLENBQUMsQ0FBQztFQUN4RCxNQUFNSyxLQUFLLEdBQUdKLFlBQVksR0FBQ0MsU0FBUztFQUNwQyxPQUFPLENBQUNGLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBR0ssS0FBSyxFQUFFTCxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUdLLEtBQUssQ0FBQztBQUMvQzs7QUFFQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2phdmFzY3JpcHQtcHJvamVjdC8uL3NyYy9zY3JpcHRzL3V0aWxzLmpzP2RiMTMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gdmVjdG9yIGFuZCBjb2xsaXNpb24gbWF0aCByZWxhdGVkIGhlbHBlciBmdW5jdGlvbnMgZ28gaGVyZVxuXG4vLyByZWN0YW5nbGUgdG8gcmVjdGFuZ2xlIGNvbGxpc2lvbiBcbi8vIHRha2VzIGluIDIgYm94IG9iamVjdHMgdGhhdCBoYXZlIHgveSBwb3NpdGlvbnMsIHdpZHRoLCBhbmQgaGVpZ2h0XG5leHBvcnQgZnVuY3Rpb24gcmVjdGFuZ2xlQ29sbGlzaW9uKGJveDEsIGJveDIpIHtcbiAgcmV0dXJuIChcbiAgICBib3gxLnggPCBib3gyLnggKyBib3gyLndpZHRoICYmXG4gICAgYm94MS54ICsgYm94MS53aWR0aCA+IGJveDIueCAmJlxuICAgIGJveDEueSA8IGJveDIueSArIGJveDIuaGVpZ2h0ICYmXG4gICAgYm94MS5oZWlnaHQgKyBib3gxLnkgPiBib3gyLnlcbiAgKVxufVxuXG4vLyBhbmdsZWQgcmVjdGFuZ2xlIGNvbGxpc2lvbiAoc2VwZXJhdGUgYXhpcyB0aGVvcmVtKVxuXG4vLyByZWN0YW5nbGUgdG8gY2lyY2xlIGNvbGxpc2lvblxuXG4vLyBjaXJjbGUgdG8gY2lyY2xlIGNvbGxpc2lvblxuXG4vLyB2ZWN0b3Igc2NhbGluZyBjYWxjdWxhdGlvblxuZXhwb3J0IGZ1bmN0aW9uIHZlY3RvclNjYWxlKHZlY3RvciwgbmV3TWFnbml0dWRlKSB7XG4gIGNvbnN0IG1hZ25pdHVkZSA9IE1hdGguc3FydCh2ZWN0b3JbMF0qKjIgKyB2ZWN0b3JbMV0qKjIpO1xuICBjb25zdCBzY2FsZSA9IG5ld01hZ25pdHVkZS9tYWduaXR1ZGU7XG4gIHJldHVybiBbdmVjdG9yWzBdICogc2NhbGUsIHZlY3RvclsxXSAqIHNjYWxlXVxufVxuXG4vLyB2ZWN0b3IgY2FsY3VsYXRpb24gYmV0d2VlbiB0d28gcG9pbnRzXG5cbi8vIG5ldyBhbmdsZSBjYWxjdWxhdGlvbiJdLCJuYW1lcyI6WyJyZWN0YW5nbGVDb2xsaXNpb24iLCJib3gxIiwiYm94MiIsIngiLCJ3aWR0aCIsInkiLCJoZWlnaHQiLCJ2ZWN0b3JTY2FsZSIsInZlY3RvciIsIm5ld01hZ25pdHVkZSIsIm1hZ25pdHVkZSIsIk1hdGgiLCJzcXJ0Iiwic2NhbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/utils.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qYXZhc2NyaXB0LXByb2plY3QvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;